{"version":3,"file":"static/js/65.6659ebaa.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Input.styled.jsx","components/Message/Message.styled.jsx","components/Message/Message.jsx","components/ShowPassword/ShowPassword.styled.jsx","components/ShowPassword/ShowPassword.jsx","components/Styled/AuthPage.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants/media';\nimport { NavLink } from 'react-router-dom';\n\nexport const Caption = styled.h1`\n  margin-top: 0;\n  margin-bottom: 18px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  color: ${colors.color7};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: 160px;\n    text-align: left;\n  }\n`;\n\nexport const Label = styled.span`\n  position: relative;\n  margin: 0;\n  margin-right: auto;\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${colors.color2};\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const BottomLink = styled(NavLink)`\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${colors.color7};\n  margin-top: 18px;\n  text-decoration: underline;\n  font-weight: 400;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const Title = styled.div`\n  font-size: 18px;\n  font-weight: 300;\n`;\n\nexport const InputStyled = styled.input`\n  width: 100%;\n  height: 20px;\n  font-size: 16px;\n  border: none;\n  border-bottom: 1px solid ${colors.color3};\n  padding: 12px 16px;\n  outline: none;\n  background-color: #fff;\n`;\n\nexport const InputWraper = styled.div`\n  width: 100%;\n  position: relative;\n  margin-bottom: 30px;\n\n  & input {\n    width: 100%;\n    height: 100%;\n    color: ${colors.color7};\n    border: 1px solid rgba(${hexToRgb(colors.color7)}, 0.3);\n    background-color: transparent;\n    border-radius: 6px;\n    height: 45px;\n    padding-left: 38px;\n    font-size: 16px;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:focus + label {\n      color: rgba(${hexToRgb(colors.color7)}, 0.3);\n    }\n\n    &:not(:placeholder-shown) + label {\n      transform: translateY(-22px);\n      color: rgba(${hexToRgb(colors.color7)}, 0.5);\n      left: 35px;\n      padding-left: 5px;\n      font-size: 12px;\n      background-color: ${colors.color6};\n    }\n  }\n\n  & label {\n    position: absolute;\n    bottom: 12px;\n    left: 40px;\n    pointer-events: none;\n    font-size: 14px;\n    color: rgba(${hexToRgb(colors.color7)}, 0.8);\n    transition: all 0.3s ease;\n    font-weight: 400;\n    letter-spacing: -0.02em;\n    line-height: 1.5;\n    padding-right: 5px;\n  }\n\n  & .error {\n    position: absolute;\n    bottom: -18px;\n    font-size: 12px;\n    color: ${colors.color1};\n    font-weight: 500;\n  }\n\n  & .icon {\n    position: absolute;\n    top: 12px;\n    left: 14px;\n    stroke: #fff;\n    width: 20px;\n    height: 20px;\n    opacity: 0.8;\n  }\n`;\n\nexport const ErrorBloodType = styled.div`\n  position: absolute;\n  top: 50px;\n  font-size: 12px;\n  color: ${colors.color1};\n`;\n\nexport const LabelInfo = styled.span``;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const MessageStyled = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 30px;\n\n  & div {\n    color: ${colors.color7};\n    border-radius: 5px;\n    font-size: 18px;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 7px 16px;\n    border-radius: 15px;\n    font-size: 14px;\n    font-weight: 500;\n    background-image: repeating-linear-gradient(\n      135deg,\n      rgba(255, 255, 42555, 0.1),\n      rgba(255, 255, 255, 0.1) 5px,\n      rgba(255, 255, 255, 0) 5px,\n      rgba(255, 255, 255, 0) 10px\n    );\n\n    & svg {\n      width: 22px;\n      height: 22px;\n      stroke: ${colors.color10};\n      fill: ${colors.color10};\n    }\n  }\n`;\n\n//\n","import { MessageStyled } from './Message.styled';\nimport { IoWarningOutline } from 'react-icons/io5';\n\nconst Message = ({ children }) => {\n  return (\n    <MessageStyled>\n      <div>\n        <IoWarningOutline />\n        {children}\n      </div>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\nimport { BsFillEyeFill } from 'react-icons/bs';\nimport { BsFillEyeSlashFill } from 'react-icons/bs';\n\nexport const ShowPasswordButton = styled.button`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  border: none;\n  background-color: transparent;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nexport const ShowIcon = styled(BsFillEyeFill)`\n  width: 18px;\n  fill: rgba(${hexToRgb(colors.color7)}, 0.5);\n`;\n\nexport const HideIcon = styled(BsFillEyeSlashFill)`\n  width: 18px;\n  fill: rgba(${hexToRgb(colors.color7)}, 0.5);\n`;\n","import {\n  ShowPasswordButton,\n  ShowIcon,\n  HideIcon,\n} from './ShowPassword.styled.jsx';\n\nconst ShowPassword = ({ isShown, clickHandler }) => {\n  return (\n    <ShowPasswordButton type=\"button\" onClick={clickHandler}>\n      {isShown ? <HideIcon /> : <ShowIcon />}\n    </ShowPasswordButton>\n  );\n};\n\nexport default ShowPassword;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\n\nexport const AuthPageStyled = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    width: 100%;\n    background-color: ${colors.color9};\n    z-index: 0;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: calc(305px + 30px);\n    left: 50%;\n    transform: translate(-50%, -100%);\n    border-radius: 50%;\n    height: 3000px;\n    width: 3000px;\n    background-color: ${colors.color7};\n    z-index: 0;\n  }\n\n  & img.bg {\n    position: absolute;\n    top: 87px;\n    left: 50%;\n    transform: translateX(-50%);\n    height: 250px;\n    width: auto;\n    z-index: 1;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants/media';\nimport { container } from 'helpers';\n\nexport const RegisterFormStyled = styled.div`\n  ${container};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n\n  & .form {\n    width: 100%;\n    background-color: ${colors.color6};\n    padding: 32px 28px 40px 28px;\n    margin-top: 305px;\n    border-radius: 30px;\n    box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const FormFields = styled.div`\n  margin-bottom: 28px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    max-width: 240px;\n  }\n`;\n","import { FormFields, RegisterFormStyled } from './RegisterForm.styled';\nimport {\n  Caption,\n  ButtonContainer,\n  BottomLink,\n} from 'components/Form/Form.styled';\nimport { InputWraper } from 'components/Form/Input.styled';\nimport { Button } from 'components/Styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/user/operations';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport Message from 'components/Message/Message';\nimport ShowPassword from 'components/ShowPassword/ShowPassword';\nimport { useState } from 'react';\nimport { selectAuthError } from 'redux/user/selectors';\nimport Sprite from 'images/sprite.svg';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const initialValues = { username: '', email: '', password: '' };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  const schema = yup.object().shape({\n    username: yup\n      .string()\n      .min(3, 'Username must be at least 3 characters')\n      .max(254, 'Username must be less than or equal to 254 characters')\n      .required('Username is a required field'),\n    email: yup\n      .string()\n      .email('Email must be a valid email')\n      .min(3, 'Email must be at least 3 characters')\n      .max(254, 'Email must be less than or equal to 254 characters')\n      .required('Email is a required field'),\n    password: yup\n      .string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(100, 'Password must be less than or equal to 100 characters')\n      .required('Password is a required field'),\n  });\n\n  const message = useSelector(selectAuthError);\n\n  const onClickHandler = () => {\n    setPasswordShown(state => !state);\n  };\n\n  return (\n    <RegisterFormStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"form\" autoComplete=\"off\">\n          <Caption>Registration</Caption>\n          <FormFields>\n            <InputWraper>\n              <Field\n                type=\"text\"\n                name=\"username\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <label htmlFor=\"username\">Name *</label>\n              <ErrorMessage className=\"error\" component=\"div\" name=\"username\" />\n              <svg className=\"icon\">\n                <use href={`${Sprite}#icon-user`}></use>\n              </svg>\n            </InputWraper>\n\n            <InputWraper>\n              <Field\n                type=\"text\"\n                name=\"email\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <label htmlFor=\"email\">Email *</label>\n              <ErrorMessage className=\"error\" component=\"div\" name=\"email\" />\n              <svg className=\"icon\">\n                <use href={`${Sprite}#icon-mail`}></use>\n              </svg>\n            </InputWraper>\n\n            <InputWraper>\n              <ShowPassword\n                clickHandler={onClickHandler}\n                isShown={passwordShown}\n              />\n              <Field\n                type={passwordShown ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <label htmlFor=\"password\">Password *</label>\n              <ErrorMessage className=\"error\" component=\"div\" name=\"password\" />\n              <svg className=\"icon\">\n                <use href={`${Sprite}#icon-lock`}></use>\n              </svg>\n            </InputWraper>\n          </FormFields>\n          <ButtonContainer>\n            <Button className=\"type2\" type=\"submit\">\n              Sign up\n            </Button>\n          </ButtonContainer>\n        </Form>\n      </Formik>\n      {message && <Message>{message}</Message>}\n      <BottomLink to=\"/signin\">Sign In</BottomLink>\n    </RegisterFormStyled>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { AuthPageStyled } from 'components/Styled/AuthPage.styled';\nimport BackgroundImage from 'images/AuthPage/auth-page-bg@2x.png';\n\nconst Register = () => {\n  return (\n    <AuthPageStyled>\n      <img className=\"bg\" src={BackgroundImage} alt=\"bg\" />\n      <RegisterForm />\n    </AuthPageStyled>\n  );\n};\n\nexport default Register;\n"],"names":["Caption","styled","colors","mediaSizes","ButtonContainer","BottomLink","NavLink","InputWraper","hexToRgb","MessageStyled","children","ShowPasswordButton","ShowIcon","BsFillEyeFill","HideIcon","BsFillEyeSlashFill","isShown","clickHandler","type","onClick","AuthPageStyled","RegisterFormStyled","container","FormFields","RegisterForm","dispatch","useDispatch","useState","passwordShown","setPasswordShown","schema","yup","shape","username","min","max","required","email","password","message","useSelector","selectAuthError","initialValues","validationSchema","onSubmit","values","resetForm","register","className","autoComplete","name","placeholder","htmlFor","component","href","Sprite","ShowPassword","state","Message","to","src","BackgroundImage","alt"],"sourceRoot":""}