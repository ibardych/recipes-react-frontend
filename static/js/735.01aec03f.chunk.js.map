{"version":3,"file":"static/js/735.01aec03f.chunk.js","mappings":"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","sources":["components/Deco/Deco.styled.jsx","components/Deco/Deco.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Styled/PageContainer.styled.jsx","components/Styled/PageTitle.styled.jsx","components/AddRecipe/AddRecipe.styled.jsx","components/AddRecipeForm/AddRecipeForm.styled.jsx","components/Counter/Counter.styled.jsx","components/Counter/Counter.jsx","components/AddRecipeForm/SelectIngredient.styled.jsx","redux/ingredients/selectors.js","components/AddRecipeForm/SelectIngredient.jsx","components/AddRecipeForm/AddRecipeForm.jsx","components/PopularRecipes/PopularRecipes.styled.jsx","components/Recipes/RecipePreview.styled.jsx","components/Recipes/RecipePreview.jsx","components/PopularRecipes/PopularRecipes.jsx","components/AddRecipe/AddRecipe.jsx","pages/AddRecipePage.jsx","redux/recipes/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\n\nexport const DecoStyled = styled.div`\n  pointer-events: none;\n\n  & .deco1 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 90px;\n    left: 30%;\n    transform: rotate(12deg);\n    z-index: 0;\n  }\n\n  & .deco2 {\n    width: 9px;\n    height: 9px;\n    background-color: #8f8f8f;\n    border-radius: 2px;\n    position: absolute;\n    top: 160px;\n    left: 50%;\n    transform: rotate(-22deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 170px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 200px;\n    }\n  }\n\n  & .deco3 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 120px;\n    left: 70%;\n    transform: rotate(32deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 150px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 160px;\n    }\n  }\n`;\n","import { DecoStyled } from './Deco.styled';\n\nconst Deco = () => {\n  return (\n    <DecoStyled>\n      <div className=\"deco1\"></div>\n      <div className=\"deco2\"></div>\n      <div className=\"deco3\"></div>\n    </DecoStyled>\n  );\n};\n\nexport default Deco;\n","import styled from '@emotion/styled';\nimport { Pagination } from '@mui/material';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaginationStyled = styled(Pagination)`\n  background: ${colors.color7};\n  box-shadow: 0px 3px 8px -3px rgba(135, 135, 135, 0.4);\n  border-radius: 26px;\n  padding: 14px 10px 10px 10px;\n  width: fit-content;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 10px 15px;\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color6};\n    box-shadow: none;\n  }\n\n  .Mui-selected {\n    background-color: ${colors.color11}!important;\n\n    .theme.dark & {\n      background-color: ${colors.color1}!important;\n      color: ${colors.color7}!important;\n    }\n  }\n\n  .MuiPaginationItem-text {\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 0.7) !important;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { PaginationStyled, PaginationWrapper } from './Pagination.styled';\nimport { selectDeviceType } from 'redux/general/selectors';\n\nexport const Pagination = ({ total, page, handlePage }) => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    total > 1 && (\n      <PaginationWrapper>\n        <PaginationStyled\n          count={total}\n          page={page}\n          siblingCount={deviceType === 'mobile' ? 1 : 2}\n          size={deviceType === 'mobile' ? 'small' : 'medium'}\n          onChange={(_, newPage) => handlePage(newPage)}\n        />\n      </PaginationWrapper>\n    )\n  );\n};\n\nexport default Pagination;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\n\nexport const PageContainer = styled.div`\n  ${({ type }) => (type === 'full' ? '' : container)};\n  padding-top: 30px;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 53px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-top: 81px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PageTitle = styled.h1`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n`;\n\nexport const PageSubTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.24px;\n  color: ${colors.color15};\n  margin-bottom: 28px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\n\nexport const AddRecipeStyled = styled.div`\n  width: 100%;\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    display: flex;\n    gap: 121px;\n  }\n`;\n\nexport const PopularRecipesWrapper = styled.div`\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 320px;\n    flex-shrink: 0;\n  }\n\n  & .follow-us {\n    margin-top: 0;\n  }\n`;\n\nexport const SocialIcons = styled.ul`\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    display: flex;\n    gap: 20px;\n  }\n\n  & a {\n    display: block;\n    width: 26px;\n    height: 26px;\n\n    & .icon {\n      fill: ${colors.color1};\n      width: 26px;\n      height: 26px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb, transition } from 'helpers';\n\nexport const AddRecipeFormStyled = styled.div`\n  width: 100%;\n`;\n\nexport const TopBlocks = styled.div`\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    display: flex;\n    gap: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const BlockLeft = styled.div``;\n\nexport const BlockRight = styled.div`\n  flex-basis: 100%;\n`;\n\nexport const AddImage = styled.div`\n  width: 279px;\n  height: 268px;\n  margin: 0 auto;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n  background: url(${({ image }) => image}) no-repeat center ${colors.color1};\n  background-size: cover;\n  cursor: pointer;\n\n  & .icon {\n    width: 64px;\n    height: 64px;\n    fill: transparent;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n  padding-top: 20px;\n  margin-bottom: 20px;\n  min-height: 44px;\n\n  & .label {\n    position: absolute;\n    top: 18px;\n    left: 0;\n    padding-left: 1px;\n    font-size: 14px;\n    line-height: 1.5;\n    ${transition('opacity', 'transform', 'font-size')};\n    font-weight: 300;\n    pointer-events: none;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 16px;\n    }\n\n    /* & .star {\n      color: $brandcolor;\n      padding-left: 3px;\n      font-weight: 500;\n    } */\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    outline: none;\n    resize: none;\n    border: none;\n    font-size: 16px;\n    color: #333;\n    padding: 0px 0px 5px 0px;\n    border-bottom: 1px solid ${colors.color3};\n    background-color: transparent;\n    transition: border-color 250ms ease-in-out;\n\n    .theme.dark & {\n      border-color: rgba(${hexToRgb(colors.color7)}, 0.3);\n    }\n\n    &:focus {\n      border-bottom: 1px solid ${colors.color1};\n    }\n\n    &:focus + label {\n      opacity: 0.3;\n    }\n\n    &:not(:placeholder-shown) + label {\n      transform: translateY(-20px);\n      font-size: 13px;\n      opacity: 1;\n    }\n\n    &:not(:placeholder-shown) {\n      border-bottom: 1px solid #cdcdcd;\n    }\n  }\n\n  &.select input {\n    display: none;\n\n    &:not(:placeholder-shown) + label {\n      transform: translateY(0px);\n      font-size: 14px;\n      opacity: 1;\n\n      @media screen and (min-width: ${mediaSizes.tablet}) {\n        font-size: 16px;\n      }\n    }\n  }\n\n  &.select label {\n    width: 100%;\n    padding-bottom: 4px;\n    border-bottom: 1px solid ${colors.color3};\n\n    .theme.dark & {\n      border-color: rgba(${hexToRgb(colors.color7)}, 0.3);\n    }\n  }\n\n  &.instructions {\n    padding-top: 0;\n  }\n\n  & textarea {\n    display: block;\n    width: 100%;\n    height: 154px;\n    outline: none;\n    resize: none;\n    border: none;\n    font-size: 16px;\n    line-height: 1.4;\n    color: #333;\n    padding: 10px 16px;\n    background-color: rgba(${hexToRgb(colors.color17)}, 0.157);\n    transition: border-color 250ms ease-in-out;\n    border-radius: 6px;\n\n    .theme.dark & {\n      background-color: transparent;\n      border: 1px solid rgba(${hexToRgb(colors.color7)}, 0.2);\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 18px;\n      height: 224px;\n    }\n\n    &::placeholder {\n      font-size: 14px;\n      color: rgba(0, 0, 0, 0.5);\n\n      .theme.dark & {\n        color: rgba(${hexToRgb(colors.color7)}, 0.3);\n      }\n\n      @media screen and (min-width: ${mediaSizes.desktop}) {\n        font-size: 18px;\n      }\n    }\n  }\n\n  & .error {\n    color: ${colors.color10};\n    font-size: 12px;\n    margin-top: 1px;\n    line-height: 1.4;\n  }\n`;\n\nexport const Selected = styled.div`\n  position: absolute;\n  top: 18px;\n  right: 0;\n  font-size: 12px;\n  line-height: 1;\n  color: #000;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 14px;\n  }\n\n  & .icon {\n    width: 20px;\n    height: 20px;\n    stroke: ${colors.color1};\n    fill: transparent;\n  }\n`;\n\nexport const SelectItems = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 0;\n  width: 123px;\n  max-height: 144px;\n  border-radius: 6px;\n  background-color: #fff;\n  box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.03);\n  overflow-y: auto;\n  padding: 8px 14px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 12px;\n  line-height: 1.5;\n  color: rgba(${hexToRgb('#000000')}, 0.5);\n  z-index: 1;\n\n  .theme.dark & {\n    background-color: rgba(${hexToRgb(colors.color1)}, 1);\n    color: rgba(${hexToRgb(colors.color7)}, 0.6);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 140px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n\n  & div {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 6px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n\n  & .active {\n    color: ${colors.color1};\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  margin-top: 60px;\n  margin-bottom: 28px;\n  display: flex;\n  justify-content: space-between;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n`;\n\nexport const Ingredients = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  position: relative;\n  align-items: center;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 50px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const CounterStyled = styled.div`\n  border-radius: 18px;\n  border: 1px solid rgba(${hexToRgb('#333333')}, 0.3);\n  padding: 2px 10px;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  line-height: 1.3;\n\n  .theme.dark & {\n    border-color: rgba(${hexToRgb(colors.color7)}, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    &.minus {\n      stroke: rgba(${hexToRgb('#333333')}, 0.3);\n\n      .theme.dark & {\n        stroke: rgba(${hexToRgb(colors.color7)}, 0.8);\n      }\n    }\n    &.plus {\n      stroke: ${colors.color1};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, CounterStyled } from './Counter.styled';\nimport Sprite from 'images/sprite.svg';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\n\nconst Counter = ({ defaultIngredient }) => {\n  const dispatch = useDispatch();\n  const newRecipe = useSelector(selectNewRecipe);\n\n  const handleCounter = action => {\n    const ingredients = newRecipe.ingredients.slice();\n    if (action === 'add') {\n      ingredients.push(defaultIngredient);\n    } else if (ingredients.length > 1) {\n      ingredients.pop();\n    }\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n  };\n\n  return (\n    <CounterStyled>\n      <Button type=\"button\" onClick={() => handleCounter('remove')}>\n        <svg className=\"minus\">\n          <use href={`${Sprite}#icon-minus`}></use>\n        </svg>\n      </Button>\n      {newRecipe.ingredients && newRecipe.ingredients.length}\n      <Button type=\"button\" onClick={() => handleCounter('add')}>\n        <svg className=\"plus\">\n          <use href={`${Sprite}#icon-plus`}></use>\n        </svg>\n      </Button>\n    </CounterStyled>\n  );\n};\n\nexport default Counter;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const SelectIngredientStyled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  & svg.delete {\n    width: 18px;\n    height: 18px;\n    stroke: #333;\n    fill: transparent;\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n\n  & input {\n    border: none;\n    outline: none;\n    background-color: rgba(${hexToRgb(colors.color17)}, 0.157);\n    border-radius: 6px;\n    padding: 16px 36px 16px 16px;\n    font-size: 16px;\n    line-height: 1.4;\n    letter-spacing: -0.02em;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n    width: 100%;\n\n    .theme.dark & {\n      background-color: transparent;\n      border: 1px solid rgba(${hexToRgb(colors.color7)}, 0.2);\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      padding: 16px 36px 16px 16px;\n    }\n  }\n\n  &.ingredient {\n    width: 100%;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n\n  &.measure {\n    width: 115px;\n    flex-shrink: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 120px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n\n    & input {\n      padding-left: 5px;\n      padding-right: 65px;\n      text-align: right;\n    }\n  }\n\n  & .selected {\n    position: absolute;\n    top: 50%;\n    right: 36px;\n    transform: translateY(-50%);\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n  }\n\n  & svg.arrow-down {\n    position: absolute;\n    top: 50%;\n    right: 16px;\n    width: 18px;\n    height: 18px;\n    stroke: ${colors.color1};\n    fill: transparent;\n    transform: translateY(-50%);\n  }\n\n  & .select {\n    position: absolute;\n    top: 52px;\n    left: 0px;\n    width: 100%;\n    max-height: 154px;\n    border-radius: 6px;\n    background-color: #fff;\n    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.03);\n    overflow-y: auto;\n    padding: 8px 14px;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    font-size: 12px;\n    line-height: 1.5;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n    z-index: 1;\n    text-align: center;\n    overflow-y: auto;\n\n    .theme.dark & {\n      background-color: rgba(${hexToRgb(colors.color1)}, 1);\n      color: rgba(${hexToRgb(colors.color7)}, 0.7);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 14px;\n    }\n\n    & div {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n\n    & .active {\n      color: ${colors.color1};\n\n      .theme.dark & {\n        color: rgba(${hexToRgb(colors.color7)}, 1);\n      }\n    }\n  }\n\n  &.ingredient .select {\n    text-align: left;\n  }\n`;\n","export const selectFoundIngredients = state =>\n  state.ingredients.foundIngredients;\n","import { Field } from 'formik';\nimport {\n  FieldWrapper,\n  SelectIngredientStyled,\n} from './SelectIngredient.styled';\nimport Sprite from 'images/sprite.svg';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\nimport { selectFoundIngredients } from 'redux/ingredients/selectors';\nimport { searchIngredients } from 'redux/ingredients/operations';\nimport { emptyFoundIngredients } from 'redux/ingredients/slice';\nimport { measureTypes } from 'constants';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { perfectScrollOptions } from 'constants';\n\nconst {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} = require('body-scroll-lock');\n\nconst SelectIngredient = ({ index }) => {\n  const dispatch = useDispatch();\n  const newRecipe = useSelector(selectNewRecipe);\n  const ingredients = newRecipe.ingredients.slice();\n  const { searchQuery, ingredient, measure, measureType } = ingredients[index];\n  const foundIngredients = useSelector(selectFoundIngredients);\n  const [measureTypesOpened, setMeasureTypesOpened] = useState(false);\n\n  const options = {\n    reserveScrollBarGap: true,\n  };\n\n  const handleMouseOver = () => {\n    const targetElement = document.body;\n    disableBodyScroll(targetElement, options);\n  };\n\n  const handleMouseOut = () => {\n    const targetElement = document.body;\n    enableBodyScroll(targetElement, options);\n  };\n\n  const removeIngredient = index => {\n    ingredients.splice(index, 1);\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n  };\n\n  const openMeasureTypes = () => {\n    setMeasureTypesOpened(!measureTypesOpened);\n  };\n\n  const setMeasureType = value => {\n    ingredients[index] = {\n      ...ingredients[index],\n      measureType: value,\n    };\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n    setMeasureTypesOpened(false);\n    clearAllBodyScrollLocks();\n  };\n\n  const findIngredients = () => {\n    if (searchQuery.length >= 2) {\n      dispatch(searchIngredients({ query: searchQuery }));\n    } else {\n      dispatch(emptyFoundIngredients());\n    }\n  };\n\n  const setIngredient = (index, item) => {\n    ingredients[index] = {\n      ...ingredients[index],\n      searchQuery: '',\n      ingredient: item.name,\n      ingredientId: item._id,\n    };\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n    clearAllBodyScrollLocks();\n  };\n\n  return (\n    <SelectIngredientStyled>\n      <FieldWrapper className=\"ingredient\">\n        <Field\n          type=\"text\"\n          name={`ingredient[${index}]`}\n          placeholder=\" \"\n          value={ingredient}\n          onKeyUp={findIngredients}\n        />\n        <Field type=\"hidden\" name=\"ingredientId\" placeholder=\" \" value=\"\" />\n        <svg className=\"arrow-down\">\n          <use href={`${Sprite}#icon-arrow-down`}></use>\n        </svg>\n        {!!foundIngredients.length && searchQuery && (\n          <div\n            className=\"select\"\n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n          >\n            <PerfectScrollbar options={perfectScrollOptions}>\n              {foundIngredients.map((item, key) => (\n                <div key={key} onClick={() => setIngredient(index, item)}>\n                  {item.name}\n                </div>\n              ))}\n            </PerfectScrollbar>\n          </div>\n        )}\n      </FieldWrapper>\n      <FieldWrapper className=\"measure\">\n        <Field\n          type=\"text\"\n          name={`measure[${index}]`}\n          placeholder=\" \"\n          value={measure}\n        />\n        <div className=\"selected\" onClick={openMeasureTypes}>\n          {measureType}\n        </div>\n        <svg className=\"arrow-down\" onClick={openMeasureTypes}>\n          <use href={`${Sprite}#icon-arrow-down`}></use>\n        </svg>\n        {measureTypesOpened && (\n          <div\n            className=\"select\"\n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n          >\n            <PerfectScrollbar options={perfectScrollOptions}>\n              {measureTypes.map((type, key) => (\n                <div\n                  key={key}\n                  className={measureType === type ? 'active' : ''}\n                  onClick={() => setMeasureType(type)}\n                >\n                  {type}\n                </div>\n              ))}\n            </PerfectScrollbar>\n          </div>\n        )}\n      </FieldWrapper>\n      <svg className=\"delete\" onClick={() => removeIngredient(index)}>\n        <use href={`${Sprite}#icon-delete`}></use>\n      </svg>\n    </SelectIngredientStyled>\n  );\n};\n\nexport default SelectIngredient;\n","import { Button } from 'components/Styled';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport {\n  AddImage,\n  AddRecipeFormStyled,\n  BlockLeft,\n  BlockRight,\n  ButtonContainer,\n  FieldWrapper,\n  Ingredients,\n  SelectItems,\n  Selected,\n  Title,\n  TopBlocks,\n} from './AddRecipeForm.styled';\nimport Sprite from 'images/sprite.svg';\nimport { selectCategories } from 'redux/recipes/selectors';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport Counter from 'components/Counter/Counter';\nimport SelectIngredient from './SelectIngredient';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\nimport { createOwnRecipe } from 'redux/ownRecipes/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { perfectScrollOptions } from 'constants';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} = require('body-scroll-lock');\n\nconst AddRecipeForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const categories = useSelector(selectCategories);\n  const newRecipe = useSelector(selectNewRecipe);\n  const { image, title, description, category, time, instructions } = newRecipe;\n  const ingredients = newRecipe.ingredients.slice();\n  const [file, setFile] = useState(null);\n  const createRecipeLoading = useSelector(\n    state => state.ownRecipes.createRecipeLoading\n  );\n\n  const options = {\n    reserveScrollBarGap: true,\n  };\n\n  const handleMouseOver = () => {\n    const targetElement = document.body;\n    disableBodyScroll(targetElement, options);\n  };\n\n  const handleMouseOut = () => {\n    const targetElement = document.body;\n    enableBodyScroll(targetElement, options);\n  };\n\n  const initialValues = useMemo(() => {\n    return {\n      image: '',\n      title: '',\n      description: '',\n      category: '',\n      time: '5 min',\n      instructions: '',\n      ingredients: [],\n    };\n  }, []);\n\n  const defaultIngredient = useMemo(() => {\n    return {\n      searchQuery: '',\n      ingredient: '',\n      ingredientId: null,\n      measure: '',\n      measureType: 'g',\n      modalOpened: false,\n    };\n  }, []);\n\n  useEffect(() => {\n    if (categories[0]?.name !== undefined && !newRecipe.category) {\n      dispatch(setNewRecipe({ ...newRecipe, category: categories[0].name }));\n    }\n\n    if (newRecipe.ingredients.length === 0) {\n      dispatch(\n        setNewRecipe({ ...initialValues, ingredients: [defaultIngredient] })\n      );\n    }\n  }, [categories, defaultIngredient, dispatch, initialValues, newRecipe]);\n\n  const [selectCategoryOpened, setSelectCategoryOpened] = useState(false);\n  const [selectTimeOpened, setSelectTimeOpened] = useState(false);\n\n  const schema = yup.object().shape({\n    title: yup.string().required('Title is a required field'),\n    description: yup.string().required('Description is a required field'),\n    // category: yup.string().required('Category is a required field'),\n    time: yup.string().required('Time is a required field'),\n  });\n\n  const handleOnChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'image':\n        const image = e.target.files[0];\n        const imageURL = URL.createObjectURL(image);\n        dispatch(setNewRecipe({ ...newRecipe, image: imageURL }));\n        setFile(image);\n        break;\n      case 'title':\n        dispatch(setNewRecipe({ ...newRecipe, title: value }));\n        break;\n      case 'description':\n        dispatch(setNewRecipe({ ...newRecipe, description: value }));\n        break;\n      case 'instructions':\n        dispatch(setNewRecipe({ ...newRecipe, instructions: value }));\n        break;\n      default:\n        if (name.startsWith('measure[')) {\n          const index = name.match(/\\[(\\d+)\\]/)[1];\n          ingredients[index] = {\n            ...ingredients[index],\n            measure: value,\n          };\n          dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n        }\n        if (name.startsWith('ingredient[')) {\n          const index = name.match(/\\[(\\d+)\\]/)[1];\n          ingredients[index] = {\n            ...ingredients[index],\n            ingredient: value,\n            searchQuery: value,\n          };\n          dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n        }\n        break;\n    }\n  };\n\n  const openSelectCategory = () => {\n    setSelectCategoryOpened(!selectCategoryOpened);\n  };\n\n  const selectCategory = category => {\n    dispatch(setNewRecipe({ ...newRecipe, category }));\n    clearAllBodyScrollLocks();\n  };\n\n  const openSelectTime = () => {\n    setSelectTimeOpened(!selectTimeOpened);\n  };\n\n  const selectTime = time => {\n    dispatch(setNewRecipe({ ...newRecipe, time }));\n    clearAllBodyScrollLocks();\n  };\n\n  const fileInputRef = useRef(null);\n\n  const handleFileClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const FileInput = forwardRef(({ name }, ref) => (\n    <input\n      type=\"file\"\n      accept=\".jpg,.jpeg,.png\"\n      style={{ display: 'none' }}\n      ref={ref}\n      name={name}\n    />\n  ));\n\n  const handleSubmit = (_, { resetForm }) => {\n    const formData = new FormData();\n\n    const newIngredients = ingredients.map(\n      ({ ingredientId, measure, measureType }) => ({\n        id: ingredientId,\n        measure: `${measure} ${measureType}`,\n      })\n    );\n\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('category', category);\n    formData.append('time', time);\n    formData.append('ingredients', JSON.stringify(newIngredients));\n    formData.append('instructions', instructions);\n\n    dispatch(createOwnRecipe(formData));\n    resetForm();\n    dispatch(setNewRecipe(initialValues));\n    navigate('/my');\n  };\n\n  return (\n    <AddRecipeFormStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\" onChange={handleOnChange}>\n          <TopBlocks>\n            <BlockLeft>\n              <AddImage onClick={handleFileClick} image={image}>\n                {!image && (\n                  <svg className=\"icon\">\n                    <use href={`${Sprite}#icon-photo`}></use>\n                  </svg>\n                )}\n              </AddImage>\n              <FileInput ref={fileInputRef} name=\"image\" />\n            </BlockLeft>\n\n            <BlockRight>\n              <FieldWrapper>\n                <Field type=\"text\" name=\"title\" placeholder=\" \" value={title} />\n                <label className=\"label\" htmlFor=\"title\">\n                  Enter item title\n                </label>\n                <ErrorMessage className=\"error\" component=\"div\" name=\"title\" />\n              </FieldWrapper>\n\n              <FieldWrapper>\n                <Field\n                  type=\"text\"\n                  name=\"description\"\n                  placeholder=\" \"\n                  value={description}\n                />\n                <label className=\"label\" htmlFor=\"description\">\n                  Enter about recipe *\n                </label>\n                <ErrorMessage\n                  className=\"error\"\n                  component=\"div\"\n                  name=\"description\"\n                />\n              </FieldWrapper>\n\n              <FieldWrapper className=\"select\">\n                <Field\n                  type=\"text\"\n                  name=\"category\"\n                  placeholder=\" \"\n                  value={category}\n                />\n                <label className=\"label\" htmlFor=\"category\">\n                  Category *\n                </label>\n                <Selected onClick={openSelectCategory}>\n                  {category}\n                  <svg className=\"icon\">\n                    <use href={`${Sprite}#icon-arrow-down`}></use>\n                  </svg>\n                  {selectCategoryOpened && (\n                    <SelectItems\n                      onMouseOver={handleMouseOver}\n                      onMouseOut={handleMouseOut}\n                    >\n                      <PerfectScrollbar options={perfectScrollOptions}>\n                        {categories.map(item => (\n                          <div\n                            key={item._id}\n                            onClick={() => selectCategory(item.name)}\n                            className={item.name === category ? 'active' : ''}\n                          >\n                            {item.name}\n                          </div>\n                        ))}\n                      </PerfectScrollbar>\n                    </SelectItems>\n                  )}\n                </Selected>\n                <ErrorMessage\n                  className=\"error\"\n                  component=\"div\"\n                  name=\"category\"\n                />\n              </FieldWrapper>\n\n              <FieldWrapper className=\"select\">\n                <Field type=\"text\" name=\"time\" placeholder=\" \" value={time} />\n                <label className=\"label\" htmlFor=\"time\">\n                  Cooking time *\n                </label>\n                <Selected onClick={openSelectTime}>\n                  {time}\n                  <svg className=\"icon\">\n                    <use href={`${Sprite}#icon-arrow-down`}></use>\n                  </svg>\n                  {selectTimeOpened && (\n                    <SelectItems\n                      onMouseOver={handleMouseOver}\n                      onMouseOut={handleMouseOut}\n                    >\n                      <PerfectScrollbar options={perfectScrollOptions}>\n                        {Array.from({ length: 24 }, (_, index) => (\n                          <div\n                            key={index}\n                            onClick={() => selectTime(`${(index + 1) * 5} min`)}\n                            className={\n                              `${(index + 1) * 5} min` === time ? 'active' : ''\n                            }\n                          >\n                            {(index + 1) * 5} min\n                          </div>\n                        ))}\n                      </PerfectScrollbar>\n                    </SelectItems>\n                  )}\n                </Selected>\n                <ErrorMessage className=\"error\" component=\"div\" name=\"time\" />\n              </FieldWrapper>\n            </BlockRight>\n          </TopBlocks>\n\n          <Title>\n            Ingredients\n            <Counter defaultIngredient={defaultIngredient} />\n          </Title>\n          <Ingredients>\n            {newRecipe.ingredients &&\n              newRecipe.ingredients.map((item, index) => (\n                <SelectIngredient key={index} index={index} />\n              ))}\n          </Ingredients>\n\n          <Title>Recipe Preparation</Title>\n          <FieldWrapper className=\"instructions\">\n            <Field\n              name=\"instructions\"\n              placeholder=\"Enter recipe\"\n              as=\"textarea\"\n              value={instructions}\n            />\n          </FieldWrapper>\n\n          <ButtonContainer>\n            <Button className=\"type5\" type=\"submit\">\n              Add\n            </Button>\n            {createRecipeLoading && <LoaderSmall name=\"new-recipe\" />}\n          </ButtonContainer>\n        </Form>\n      </Formik>\n    </AddRecipeFormStyled>\n  );\n};\n\nexport default AddRecipeForm;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const PopularRecipesStyled = styled.div`\n  margin-bottom: 40px;\n  min-height: 200px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0px 32px;\n  }\n\n  &.no-items {\n    min-height: 0px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipePreviewStyled = styled(NavLink)`\n  display: flex;\n  gap: 12px;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n\n  .theme.dark & {\n    border-color: rgba(${hexToRgb(colors.color7)}, 0.15);\n  }\n\n  &:last-child {\n    padding-bottom: 0px;\n    margin-bottom: 0px;\n    border-bottom: none;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-basis: calc((100% - 1 * 32px) / 2);\n\n    &:last-child {\n      padding-bottom: 20px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    }\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-basis: 100%;\n\n    &:last-child {\n      padding-bottom: 0px;\n      margin-bottom: 0px;\n      border-bottom: none;\n    }\n  }\n`;\n\nexport const Image = styled.div`\n  display: block;\n  width: 104px;\n  height: 104px;\n  border-radius: 8px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow: hidden;\n  background: url(${({ url }) => url}) no-repeat center;\n  background-size: cover;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 97px;\n    height: 97px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: -0.24px;\n  margin-bottom: 5px;\n  color: ${colors.color15};\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Description = styled.div`\n  font-size: 12px;\n  line-height: 1.4;\n  letter-spacing: -0.02em;\n  color: #3e4462;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 0.6);\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import BACKEND_URL from 'constants/backend.url';\nimport {\n  Description,\n  Image,\n  RecipePreviewStyled,\n  Title,\n  Wrapper,\n} from './RecipePreview.styled';\n\nconst RecipePreview = ({ recipe, type }) => {\n  const { _id, owner, preview, description, title } = recipe;\n\n  return (\n    <RecipePreviewStyled to={`/recipe/${_id}`}>\n      <Image\n        className=\"recipe-image\"\n        url={`${owner ? `${BACKEND_URL}/` : ``}${preview}`}\n      ></Image>\n      <Wrapper>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </Wrapper>\n    </RecipePreviewStyled>\n  );\n};\n\nexport default RecipePreview;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPopularRecipes } from 'redux/recipes/selectors';\nimport { getPopularRecipes } from 'redux/recipes/operations';\nimport { PopularRecipesStyled } from './PopularRecipes.styled';\nimport Pagination from 'components/Pagination/Pagination';\nimport { useState } from 'react';\nimport { scrollToTop } from 'helpers';\nimport { useRef } from 'react';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport RecipePreview from 'components/Recipes/RecipePreview';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst PopularRecipes = () => {\n  const dispatch = useDispatch();\n  const deviceType = useSelector(selectDeviceType);\n  const { recipes, total } = useSelector(selectPopularRecipes);\n  const [top, setTop] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(4);\n  const ref = useRef(null);\n  const loading = useSelector(state => state.recipes.popularRecipesLoading);\n\n  const paginationShop = false;\n\n  useEffect(() => {\n    dispatch(getPopularRecipes({ page, limit }));\n  }, [dispatch, page, limit]);\n\n  const handlePage = page => {\n    setPage(page);\n    dispatch(getPopularRecipes({ page, limit }));\n    scrollToTop(top - (deviceType !== 'mobile' ? 100 : 100));\n  };\n\n  useEffect(() => {\n    const element = ref.current;\n    if (element) {\n      const { top } = element.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [ref]);\n\n  return (\n    <>\n      <PopularRecipesStyled\n        ref={ref}\n        className={`${deviceType === 'desktop' ? 'desktop' : ''} ${\n          !recipes.length ? 'no-items' : ''\n        }`}\n      >\n        {loading ? (\n          <LoaderSmall scale=\"0.8\" top=\"100px\" />\n        ) : (\n          !!recipes.length &&\n          recipes &&\n          recipes.map((recipe, key) => (\n            <RecipePreview key={key} recipe={recipe} />\n          ))\n        )}\n      </PopularRecipesStyled>\n      {paginationShop &&\n        !loading &&\n        !!recipes.length &&\n        deviceType !== 'desktop' && (\n          <Pagination\n            total={Math.ceil(total / limit)}\n            page={page}\n            handlePage={handlePage}\n          />\n        )}\n    </>\n  );\n};\n\nexport default PopularRecipes;\n","import {\n  AddRecipeStyled,\n  PopularRecipesWrapper,\n  SocialIcons,\n} from './AddRecipe.styled';\nimport AddRecipeForm from 'components/AddRecipeForm/AddRecipeForm';\nimport { Title } from 'components/AddRecipeForm/AddRecipeForm.styled';\nimport PopularRecipes from 'components/PopularRecipes/PopularRecipes';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport { BsFacebook, BsInstagram, BsYoutube, BsTwitter } from 'react-icons/bs';\nimport { NavLink } from 'react-router-dom';\n\nconst AddRecipe = () => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    <AddRecipeStyled>\n      <AddRecipeForm />\n      <PopularRecipesWrapper>\n        {deviceType === 'desktop' && (\n          <>\n            <Title className=\"follow-us\">Follow us</Title>\n            <SocialIcons>\n              <li>\n                <NavLink to=\"/\">\n                  <BsFacebook className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsInstagram className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsYoutube className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsTwitter className=\"icon\" />\n                </NavLink>\n              </li>\n            </SocialIcons>\n          </>\n        )}\n        <Title>Popular recipes</Title>\n        <PopularRecipes />\n      </PopularRecipesWrapper>\n    </AddRecipeStyled>\n  );\n};\n\nexport default AddRecipe;\n","import AddRecipe from 'components/AddRecipe/AddRecipe';\nimport Deco from 'components/Deco/Deco';\nimport { PageContainer } from 'components/Styled/PageContainer.styled';\nimport { PageTitle } from 'components/Styled/PageTitle.styled';\n\nconst AddRecipePage = () => {\n  return (\n    <PageContainer>\n      <Deco />\n      <PageTitle>Add recipe</PageTitle>\n      <AddRecipe />\n    </PageContainer>\n  );\n};\n\nexport default AddRecipePage;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\nexport const selectRecipe = state => state.recipes.recipe;\nexport const selectFavoriteRecipes = state => state.recipes.favoriteRecipes;\nexport const selectPopularRecipes = state => state.recipes.popularRecipes;\nexport const selectSearchRecipes = state => state.recipes.searchRecipes;\n"],"names":["DecoStyled","styled","colors","mediaSizes","className","PaginationWrapper","PaginationStyled","Pagination","hexToRgb","total","page","handlePage","deviceType","useSelector","selectDeviceType","count","siblingCount","size","onChange","_","newPage","PageContainer","type","container","PageTitle","PageSubTitle","AddRecipeStyled","PopularRecipesWrapper","SocialIcons","AddRecipeFormStyled","TopBlocks","BlockLeft","BlockRight","AddImage","image","FieldWrapper","transition","Selected","SelectItems","Title","Ingredients","ButtonContainer","CounterStyled","Button","defaultIngredient","dispatch","useDispatch","newRecipe","selectNewRecipe","handleCounter","action","ingredients","slice","push","length","pop","setNewRecipe","onClick","href","Sprite","SelectIngredientStyled","selectFoundIngredients","state","foundIngredients","require","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","index","searchQuery","ingredient","measure","measureType","useState","measureTypesOpened","setMeasureTypesOpened","options","reserveScrollBarGap","handleMouseOver","targetElement","document","body","handleMouseOut","openMeasureTypes","name","placeholder","value","onKeyUp","searchIngredients","query","emptyFoundIngredients","onMouseOver","onMouseOut","perfectScrollOptions","map","item","key","ingredientId","_id","setIngredient","measureTypes","splice","removeIngredient","navigate","useNavigate","categories","selectCategories","title","description","category","time","instructions","file","setFile","createRecipeLoading","ownRecipes","initialValues","useMemo","modalOpened","useEffect","undefined","selectCategoryOpened","setSelectCategoryOpened","selectTimeOpened","setSelectTimeOpened","schema","yup","shape","required","fileInputRef","useRef","FileInput","forwardRef","ref","accept","style","display","validationSchema","onSubmit","resetForm","formData","FormData","newIngredients","id","append","JSON","stringify","createOwnRecipe","autoComplete","e","target","files","imageURL","URL","createObjectURL","startsWith","match","current","click","htmlFor","component","selectCategory","Array","from","selectTime","as","Loader","PopularRecipesStyled","RecipePreviewStyled","NavLink","Image","url","Wrapper","Description","recipe","owner","preview","to","BACKEND_URL","selectPopularRecipes","recipes","setTop","limit","loading","popularRecipesLoading","getPopularRecipes","element","top","getBoundingClientRect","scale","Deco","selectRecipesMainPage","recipesMainPage","selectRecipesByCategory","recipesByCategory","selectRecipe","selectFavoriteRecipes","favoriteRecipes","popularRecipes","selectSearchRecipes","searchRecipes"],"sourceRoot":""}