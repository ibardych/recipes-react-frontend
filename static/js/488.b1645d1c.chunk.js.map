{"version":3,"file":"static/js/488.b1645d1c.chunk.js","mappings":"kNAIaA,EAAgBC,EAAAA,QAAAA,IAAH,iNACtB,kBAAwB,SAAxB,EAAGC,KAA8B,GAAKC,EAAAA,EAAtC,GAI8BC,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,Q,4HCPrBC,EAAYJ,EAAAA,QAAAA,GAAH,6RAKXK,EAAAA,GAAAA,QAGuBF,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,QAIrBE,EAAAA,GAAAA,QAIAC,EAAeN,EAAAA,QAAAA,GAAH,gUAKdK,EAAAA,GAAAA,SAIOE,EAAAA,EAAAA,IAASF,EAAAA,GAAAA,QAGOF,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,Q,4ICjCrBK,EAAmBR,EAAAA,QAAAA,IAAH,+VACKG,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,QASEA,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,SAMvBM,EAAaT,EAAAA,QAAAA,IAAH,+BACnBE,EAAAA,IAGSQ,EAAmBV,EAAAA,QAAAA,IAAH,sPAOKG,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,SAKrBQ,EAAOX,EAAAA,QAAAA,IAAH,m+BASCO,EAAAA,EAAAA,IAASF,EAAAA,GAAAA,QAGOF,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,QAYVE,EAAAA,GAAAA,OASYF,EAAAA,GAAAA,OAMAA,EAAAA,GAAAA,SASvBS,EAAcZ,EAAAA,QAAAA,IAAH,oLACUG,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,S,mPC3FrBU,EAAqBb,EAAAA,QAAAA,IAAH,m5BAKGG,EAAAA,GAAAA,OAGZW,EAIYX,EAAAA,GAAAA,QAIKA,EAAAA,GAAAA,OACjBY,EAGiBZ,EAAAA,GAAAA,OACjBa,EAacb,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,SAKvBc,EAAcjB,EAAAA,QAAAA,GAAH,2VACpBE,EAAAA,GAMOG,EAAAA,GAAAA,OAGuBF,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAKrBe,EAAoBlB,EAAAA,QAAAA,IAAH,sUAC1BE,EAAAA,GAKOG,EAAAA,GAAAA,OAGuBF,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAKrBgB,EAAanB,EAAAA,QAAAA,IAAH,mqBAWWG,EAAAA,GAAAA,OAKAA,EAAAA,GAAAA,QASEA,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,S,2DC1DpC,EAtCqB,WACnB,IAAMiB,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAoBF,EAAAA,EAAAA,IAAYG,EAAAA,IAChCC,GAAwBJ,EAAAA,EAAAA,KAC5B,SAAAK,GAAK,OAAIA,EAAMC,KAAKF,qBAAf,IAEP,GAAgCG,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OANAC,EAAAA,EAAAA,YAAU,WACJR,GACFO,EAAYP,EAAkBS,MAAK,SAAAC,GAAQ,OAAIA,IAAab,EAAOc,GAAxB,IAE9C,GAAE,CAACX,EAAmBH,KAGrB,UAACT,EAAD,YACE,SAACI,EAAD,UAAcK,EAAOe,SACrB,SAACnB,EAAD,UAAoBI,EAAOgB,eAC3B,SAAC,IAAD,CAAQrC,KAAK,SAASsC,UAAU,eAAeC,QAf5B,WAChBT,GAAUX,GAASqB,EAAAA,EAAAA,IAAoBnB,EAAOc,MAC/CL,GAAUX,GAASsB,EAAAA,EAAAA,IAAyBpB,EAAOc,KACxD,EAYG,SACGL,EAAW,+BAAiC,4BAE9CJ,IAAyB,SAACgB,EAAA,EAAD,CAAaC,KAAK,oBAC5C,UAACzB,EAAD,YACE,gBAAKoB,UAAU,OAAf,UACE,gBAAKM,KAAI,UAAKC,EAAAA,EAAL,mBAEVxB,EAAOyB,UAIf,E,uCCtBD,I,kBACA,GAAe,IAA0B,0DC5B5BC,GAAoBhD,EAAAA,QAAAA,IAAH,sBAEjBiD,GAAYjD,EAAAA,QAAAA,IAAH,6tBAIAK,EAAAA,GAAAA,OAEXA,EAAAA,GAAAA,OAOuBF,EAAAA,GAAAA,OAMAA,EAAAA,GAAAA,QAUEA,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,SAMvB+C,GAAiBlD,EAAAA,QAAAA,IAAH,sMAMOG,EAAAA,GAAAA,OAEAA,EAAAA,GAAAA,SAIrBgD,GAAanD,EAAAA,QAAAA,IAAH,gZAEDK,EAAAA,GAAAA,QASEA,EAAAA,GAAAA,OAGUF,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,SAIrBiD,GAAYpD,EAAAA,QAAAA,IAAH,+MAMYG,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,SAIrBkD,GAAQrD,EAAAA,QAAAA,IAAH,kRAIE,qBAAGsD,GAAH,GAGcnD,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAIrBoD,GAAOvD,EAAAA,QAAAA,IAAH,mTACNK,EAAAA,GAAAA,QAOEA,EAAAA,GAAAA,OAGqBF,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAIrBqD,GAAUxD,EAAAA,QAAAA,IAAH,qhBACEK,EAAAA,GAAAA,OACXA,EAAAA,GAAAA,OAWuBF,EAAAA,GAAAA,OAOAA,EAAAA,GAAAA,SAOrBsD,GAAWzD,EAAAA,QAAAA,IAAH,+oBAUIO,EAAAA,EAAAA,IAASF,EAAAA,GAAAA,QAGAF,EAAAA,GAAAA,OAKAA,EAAAA,GAAAA,QAIZuD,GAGcvD,EAAAA,GAAAA,OAGAA,EAAAA,GAAAA,SCvFpC,GAzEoB,WAClB,IAAMiB,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBmC,GAAepC,EAAAA,EAAAA,IAAYqC,EAAAA,IACjC,GAAsC9B,EAAAA,EAAAA,UAAS,IAA/C,eAAO+B,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,SAAAC,GACxBF,GAAe,SAAAG,GAAe,OAC5BA,EAAgBC,QAAO,SAAAC,GAAE,OAAIA,IAAOH,CAAX,GADG,GAG/B,EAEKI,EAAiB,mCAAG,WAAOC,EAAQL,EAAQpB,EAAM0B,EAASC,GAAtC,2EACpBV,EAAYW,SAASR,GADD,oDAGxBF,EAAe,GAAD,eAAKD,GAAL,CAAkBG,KAE1BG,EALkB,UAKV7C,EAAOc,IALG,YAKI4B,GACb,QAAXK,EANoB,gCAOhBjD,GACJqD,EAAAA,EAAAA,IAA4B,CAC1BN,GAAAA,EACAvB,KAAAA,EACA0B,QAAAA,EACAC,IAAAA,KAZkB,UAgBT,WAAXF,EAhBoB,kCAiBhBjD,GAASsD,EAAAA,EAAAA,IAAiCP,IAjB1B,QAmBxBJ,EAAkBC,GAnBM,4CAAH,8DAsBvB,OACE,UAAChB,GAAD,YACE,UAACC,GAAD,YACE,0CACA,4BACE,qCACA,gDAGJ,SAACC,GAAD,UACG5B,EAAOqD,aACNrD,EAAOqD,YAAYC,KAAI,WAAkCC,GAAlC,IAAQV,EAAR,EAAG/B,IAASQ,EAAZ,EAAYA,KAAM0B,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,IAA3B,OACrB,UAACpB,GAAD,YACE,UAACC,GAAD,YACE,SAACC,GAAD,CAAOC,IAAKiB,KACZ,SAAChB,GAAD,UAAOX,QAET,SAACY,GAAD,UAAUc,IAETX,EAAazB,MAAK,SAAA4C,GAAG,OAAIA,EAAIX,KAAJ,UAAc7C,EAAOc,IAArB,YAA4B+B,EAAhC,KACpB,SAACV,GAAD,CACElB,UAAU,UACVC,QAAS,kBAAM4B,EAAkB,SAAUD,EAAlC,KAGX,SAACV,GAAD,CACEjB,QAAS,kBACP4B,EAAkB,MAAOD,EAAIvB,EAAM0B,EAASC,EADrC,IAKZV,EAAYW,SAASL,KAAO,SAACxB,EAAA,EAAD,CAAaC,KAAK,iBAnBhCiC,EADI,QA0BhC,E,gCClBD,GAtDmB,WACjB,IAAMzD,GAAWC,EAAAA,EAAAA,MACXc,GAAa4C,EAAAA,EAAAA,MAAb5C,SACA6C,GAAazD,EAAAA,EAAAA,IAAY0D,GAAAA,IACzB3D,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrB0D,GAAgB3D,EAAAA,EAAAA,KAAY,SAAAK,GAAK,OAAIA,EAAMuD,QAAQD,aAAlB,IAMvC,OAJAjD,EAAAA,EAAAA,YAAU,WACRb,GAASgE,EAAAA,EAAAA,IAAcjD,GACxB,GAAE,CAACf,EAAUe,KAGZ,8BACG+C,GACC,SAACvC,EAAA,EAAD,CAAa0C,MAAM,IAAIC,IAAI,UAE3BhE,GACAa,IAAab,EAAOc,MAClB,UAAC5B,EAAD,YACE,SAAC,EAAD,KACA,UAACC,EAAD,YACE,SAAC,GAAD,KACA,SAAC,KAAD,kCACA,UAACG,EAAD,YACE,SAACF,EAAD,UACGY,EAAOiE,cACNjE,EAAOiE,aAAaX,KAAI,SAACY,EAAMX,GAC7B,OAAOW,GACL,UAAC7E,EAAD,YACE,iBAAM4B,UAAU,SAAhB,SAA0BsC,EAAM,IAC/BW,IAFQX,GAKX,EAEH,OAGL,gBACEtC,UAAU,eACVkD,IAAG,eAAsBC,IAAjBpE,EAAOqE,MAAsBC,GAAAA,EAAc,IAAM,IAAtD,OACc,WAAfZ,EAA0B1D,EAAOuE,QAAUvE,EAAOwE,OAEpDC,IAAKzE,EAAOe,kBAS7B,E,WC7DD,GARe,WACb,OACE,SAAC,KAAD,CAAepC,KAAK,OAApB,UACE,SAAC,GAAD,KAGL,C,wMCTM,IAAM+F,EAAmB,SAAApE,GAAK,OAAIA,EAAMuD,QAAQc,UAAlB,EACxBC,EAAwB,SAAAtE,GAAK,OAAIA,EAAMuD,QAAQgB,eAAlB,EAC7BC,EAA0B,SAAAxE,GAAK,OAAIA,EAAMuD,QAAQkB,iBAAlB,EAC/B7E,EAAe,SAAAI,GAAK,OAAIA,EAAMuD,QAAQ7D,MAAlB,EACpBgF,EAAwB,SAAA1E,GAAK,OAAIA,EAAMuD,QAAQoB,eAAlB,EAC7BC,EAAuB,SAAA5E,GAAK,OAAIA,EAAMuD,QAAQsB,cAAlB,EAC5BC,EAAsB,SAAA9E,GAAK,OAAIA,EAAMuD,QAAQwB,aAAlB,C","sources":["components/Styled/PageContainer.styled.jsx","components/Styled/PageTitle.styled.jsx","components/RecipeFull/RecipeFull.styled.jsx","components/RecipeFull/RecipeHeader.styled.jsx","components/RecipeFull/RecipeHeader.jsx","images/check.svg","components/RecipeFull/Ingredients.styled.jsx","components/RecipeFull/Ingredients.jsx","components/RecipeFull/RecipeFull.jsx","pages/RecipePage.jsx","redux/recipes/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\n\nexport const PageContainer = styled.div`\n  ${({ type }) => (type === 'full' ? '' : container)};\n  padding-top: 30px;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 53px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-top: 81px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PageTitle = styled.h1`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n`;\n\nexport const PageSubTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.24px;\n  color: ${colors.color15};\n  margin-bottom: 28px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { container, hexToRgb } from 'helpers';\n\nexport const RecipeFullStyled = styled.div`\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  & .recipe-image {\n    border-radius: 8px;\n    width: 100%;\n    display: block;\n    margin-bottom: 100px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      width: 30%;\n    }\n  }\n`;\n\nexport const RecipeBody = styled.div`\n  ${container};\n`;\n\nexport const PreparationSteps = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 40px;\n  width: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 20px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    gap: 22px;\n  }\n`;\n\nexport const Step = styled.div`\n  display: flex;\n  gap: 14px;\n  font-size: 12px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  color: rgba(0, 0, 0, 0.8);\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    font-size: 16px;\n    line-height: 1.4;\n  }\n\n  & .number {\n    width: 21px;\n    height: 21px;\n    border-radius: 21px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${colors.color1};\n    flex-shrink: 0;\n    flex-grow: 0;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 1.5;\n    color: #fff;\n    position: relative;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: -2px;\n      width: 24px;\n      height: 24px;\n      font-size: 14px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: -3px;\n      width: 30px;\n      height: 30px;\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const Preparation = styled.div`\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    display: flex;\n    gap: 100px;\n    align-items: flex-start;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { container } from 'helpers';\nimport bgHeroMobile from 'images/Recipe/bg-hero-mobile@2x.png';\nimport bgHeroTablet from 'images/Recipe/bg-hero-tablet@2x.png';\nimport bgHeroDesktop from 'images/Recipe/bg-hero-desktop@2x.png';\n\nexport const RecipeHeaderStyled = styled.div`\n  margin-top: -112px;\n  padding-top: 144px;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: -135px;\n    padding-top: 136px;\n    background: url(${bgHeroDesktop}) no-repeat bottom #f5f5f5;\n    background-size: cover;\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-top: -163px;\n    padding-top: 164px;\n  }\n  @media screen and (max-width: calc(${mediaSizes.tablet} + 1px)) {\n    background: url(${bgHeroTablet}) no-repeat bottom #f5f5f5;\n    background-size: cover;\n  }\n  @media screen and (max-width: calc(${mediaSizes.mobile} + 1px)) {\n    background: url(${bgHeroMobile}) no-repeat bottom #f5f5f5;\n    background-size: cover;\n  }\n\n  & .button {\n    position: relative;\n    left: 50%;\n    transform: translateX(-50%);\n\n    .theme.dark & {\n      color: #333;\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n`;\n\nexport const RecipeTitle = styled.h1`\n  ${container};\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  color: ${colors.color1};\n  margin-bottom: 18px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 44px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    max-width: 1000px;\n  }\n`;\n\nexport const RecipeDescription = styled.div`\n  ${container};\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: -0.02em;\n  color: ${colors.color8};\n  margin-bottom: 24px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 18px;\n    margin-bottom: 30px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    max-width: 700px;\n  }\n`;\n\nexport const RecipeTime = styled.div`\n  margin-top: 42px;\n  padding-bottom: 90px;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: -0.24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-top: 60px;\n    font-size: 16px;\n    padding-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-bottom: 48px;\n  }\n\n  & .icon {\n    fill: transparent;\n    width: 14px;\n    height: 14px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 18px;\n      height: 18px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  RecipeDescription,\n  RecipeHeaderStyled,\n  RecipeTime,\n  RecipeTitle,\n} from './RecipeHeader.styled';\nimport { selectRecipe } from 'redux/recipes/selectors';\nimport { Button } from 'components/Styled';\nimport {\n  addRecipeToFavorite,\n  removeRecipeFromFavorite,\n} from 'redux/user/operations';\nimport { selectFavoriteRecipeIds } from 'redux/user/selectors';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Sprite from 'images/sprite.svg';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst RecipeHeader = () => {\n  const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipe);\n  const favoriteRecipeIds = useSelector(selectFavoriteRecipeIds);\n  const toggleFavoriteLoading = useSelector(\n    state => state.user.toggleFavoriteLoading\n  );\n  const [favorite, setFavorite] = useState(false);\n\n  const handleFavorite = () => {\n    if (!favorite) dispatch(addRecipeToFavorite(recipe._id));\n    if (favorite) dispatch(removeRecipeFromFavorite(recipe._id));\n  };\n\n  useEffect(() => {\n    if (favoriteRecipeIds) {\n      setFavorite(favoriteRecipeIds.some(recipeId => recipeId === recipe._id));\n    }\n  }, [favoriteRecipeIds, recipe]);\n\n  return (\n    <RecipeHeaderStyled>\n      <RecipeTitle>{recipe.title}</RecipeTitle>\n      <RecipeDescription>{recipe.description}</RecipeDescription>\n      <Button type=\"button\" className=\"type4 button\" onClick={handleFavorite}>\n        {favorite ? 'Remove from favorite recipes' : 'Add to favorite recipes'}\n      </Button>\n      {toggleFavoriteLoading && <LoaderSmall name=\"toggle-favorie\" />}\n      <RecipeTime>\n        <svg className=\"icon\">\n          <use href={`${Sprite}#icon-clock`}></use>\n        </svg>\n        {recipe.time}\n      </RecipeTime>\n    </RecipeHeaderStyled>\n  );\n};\n\nexport default RecipeHeader;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheck(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 10,\n    viewBox: \"0 0 10 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.77377 1.01229C8.04472 0.612637 8.58836 0.508303 8.98801 0.779256C9.38767 1.05021 9.492 1.59384 9.22105 1.9935L4.47925 8.98765C4.13243 9.4992 3.37879 9.4992 3.03197 8.98765L0.779622 5.66544C0.508669 5.26578 0.613003 4.72215 1.01266 4.45119C1.41231 4.18024 1.95595 4.28457 2.2269 4.68423L3.75561 6.93907L7.77377 1.01229Z\",\n    fill: \"#8BAA36\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.247b86d0e6a26346bf0885b5b0408bd8.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\nimport checkIcon from 'images/check.svg';\n\nexport const IngredientsStyled = styled.div``;\n\nexport const TableHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 14px;\n  background-color: ${colors.color1};\n  border-radius: 8px;\n  color: ${colors.color7};\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 1.5;\n  letter-spacing: 0.03em;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 21px 32px;\n    font-size: 18px;\n    line-height: 27px;\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding: 21px 40px;\n    margin-bottom: 50px;\n  }\n\n  & div {\n    display: flex;\n    gap: 18px;\n    align-items: center;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      gap: 38px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      gap: 110px;\n    }\n  }\n`;\n\nexport const IngredientList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Ingredient = styled.div`\n  padding: 10px 37px 10px 10px;\n  background-color: ${colors.color11};\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n  position: relative;\n\n  .theme.dark & {\n    background-color: ${colors.color6};\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 16px 58px 16px 24px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const ImageName = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 24px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Image = styled.div`\n  width: 57px;\n  height: 57px;\n  height: auto;\n  background: url(${({ url }) => url}) no-repeat center;\n  background-size: cover;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 144px;\n    height: 144px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Name = styled.div`\n  color: ${colors.color15};\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: -0.24px;\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 20px;\n    line-height: 1;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Measure = styled.div`\n  background-color: ${colors.color1};\n  color: ${colors.color7};\n  padding: 4px 6px;\n  border-radius: 4px;\n  flex-shrink: 0;\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 1.5;\n  margin-right: 8px;\n  text-align: right;\n  max-width: 90px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 5px 12px;\n    font-size: 16px;\n    line-height: 27px;\n    margin-right: 48px;\n    max-width: 180px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-right: 132px;\n    font-size: 18px;\n    max-width: 100%;\n  }\n`;\n\nexport const Checkbox = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  width: 18px;\n  height: 18px;\n  flex-shrink: 0;\n  flex-grow: 0;\n  border-radius: 4px;\n  cursor: pointer;\n\n  .theme.dark & {\n    border-color: rgba(${hexToRgb(colors.color7)}, 0.5) !important;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 35px;\n    height: 35px;\n    border: 2px solid rgba(0, 0, 0, 0.2);\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  &.checked {\n    background: url(${checkIcon}) no-repeat center;\n    background-size: 10px 10px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      background-size: 20px 20px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectRecipe } from 'redux/recipes/selectors';\nimport {\n  Checkbox,\n  Image,\n  ImageName,\n  Ingredient,\n  IngredientList,\n  IngredientsStyled,\n  Measure,\n  Name,\n  TableHead,\n} from './Ingredients.styled';\nimport {\n  addIngredientToShoppingList,\n  removeIngredientFromShoppingList,\n} from 'redux/user/operations';\nimport { selectShoppingList } from 'redux/user/selectors';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { useState } from 'react';\n\nconst Ingredients = () => {\n  const dispatch = useDispatch();\n  const recipe = useSelector(selectRecipe);\n  const shoppingList = useSelector(selectShoppingList);\n  const [ingrLoading, setIngrLoading] = useState([]);\n\n  const removeIngrLoading = ingrId => {\n    setIngrLoading(prevIngrLoading =>\n      prevIngrLoading.filter(id => id !== ingrId)\n    );\n  };\n\n  const toggleShopingList = async (action, ingrId, name, measure, img) => {\n    if (ingrLoading.includes(ingrId)) return;\n\n    setIngrLoading([...ingrLoading, ingrId]);\n\n    const id = `${recipe._id}-${ingrId}`;\n    if (action === 'add') {\n      await dispatch(\n        addIngredientToShoppingList({\n          id,\n          name,\n          measure,\n          img,\n        })\n      );\n    }\n    if (action === 'remove') {\n      await dispatch(removeIngredientFromShoppingList(id));\n    }\n    removeIngrLoading(ingrId);\n  };\n\n  return (\n    <IngredientsStyled>\n      <TableHead>\n        <div>Ingredients</div>\n        <div>\n          <div>Amount</div>\n          <div>Add to list</div>\n        </div>\n      </TableHead>\n      <IngredientList>\n        {recipe.ingredients &&\n          recipe.ingredients.map(({ _id: id, name, measure, img }, key) => (\n            <Ingredient key={key}>\n              <ImageName>\n                <Image url={img} />\n                <Name>{name}</Name>\n              </ImageName>\n              <Measure>{measure}</Measure>\n\n              {shoppingList.some(obj => obj.id === `${recipe._id}-${id}`) ? (\n                <Checkbox\n                  className=\"checked\"\n                  onClick={() => toggleShopingList('remove', id)}\n                ></Checkbox>\n              ) : (\n                <Checkbox\n                  onClick={() =>\n                    toggleShopingList('add', id, name, measure, img)\n                  }\n                ></Checkbox>\n              )}\n              {ingrLoading.includes(id) && <LoaderSmall name=\"ingredient\" />}\n            </Ingredient>\n          ))}\n      </IngredientList>\n    </IngredientsStyled>\n  );\n};\n\nexport default Ingredients;\n","// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Preparation,\n  PreparationSteps,\n  RecipeBody,\n  RecipeFullStyled,\n  Step,\n} from './RecipeFull.styled';\nimport { useParams } from 'react-router-dom';\nimport { selectRecipe } from 'redux/recipes/selectors';\nimport { useEffect } from 'react';\nimport { getRecipeById } from 'redux/recipes/operations';\nimport RecipeHeader from './RecipeHeader';\nimport Ingredients from './Ingredients';\nimport { PageSubTitle } from 'components/Styled/PageTitle.styled';\nimport BACKEND_URL from 'constants/backend.url';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst RecipeFull = () => {\n  const dispatch = useDispatch();\n  let { recipeId } = useParams();\n  const deviceType = useSelector(selectDeviceType);\n  const recipe = useSelector(selectRecipe);\n  const recipeLoading = useSelector(state => state.recipes.recipeLoading);\n\n  useEffect(() => {\n    dispatch(getRecipeById(recipeId));\n  }, [dispatch, recipeId]);\n\n  return (\n    <>\n      {recipeLoading ? (\n        <LoaderSmall scale=\"1\" top=\"100px\" />\n      ) : (\n        recipe &&\n        recipeId === recipe._id && (\n          <RecipeFullStyled>\n            <RecipeHeader />\n            <RecipeBody>\n              <Ingredients />\n              <PageSubTitle>Recipe Preparation</PageSubTitle>\n              <Preparation>\n                <PreparationSteps>\n                  {recipe.instructions &&\n                    recipe.instructions.map((item, key) => {\n                      return item ? (\n                        <Step key={key}>\n                          <span className=\"number\">{key + 1}</span>\n                          {item}\n                        </Step>\n                      ) : (\n                        ''\n                      );\n                    })}\n                </PreparationSteps>\n\n                <img\n                  className=\"recipe-image\"\n                  src={`${recipe.owner !== undefined ? BACKEND_URL + '/' : ''}${\n                    deviceType === 'mobile' ? recipe.preview : recipe.thumb\n                  }`}\n                  alt={recipe.title}\n                />\n              </Preparation>\n            </RecipeBody>\n          </RecipeFullStyled>\n        )\n      )}\n    </>\n  );\n};\n\nexport default RecipeFull;\n","import RecipeFull from 'components/RecipeFull/RecipeFull';\nimport { PageContainer } from 'components/Styled/PageContainer.styled';\n\nconst Recipe = () => {\n  return (\n    <PageContainer type=\"full\">\n      <RecipeFull />\n    </PageContainer>\n  );\n};\n\nexport default Recipe;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\nexport const selectRecipe = state => state.recipes.recipe;\nexport const selectFavoriteRecipes = state => state.recipes.favoriteRecipes;\nexport const selectPopularRecipes = state => state.recipes.popularRecipes;\nexport const selectSearchRecipes = state => state.recipes.searchRecipes;\n"],"names":["PageContainer","styled","type","container","mediaSizes","PageTitle","colors","PageSubTitle","hexToRgb","RecipeFullStyled","RecipeBody","PreparationSteps","Step","Preparation","RecipeHeaderStyled","bgHeroDesktop","bgHeroTablet","bgHeroMobile","RecipeTitle","RecipeDescription","RecipeTime","dispatch","useDispatch","recipe","useSelector","selectRecipe","favoriteRecipeIds","selectFavoriteRecipeIds","toggleFavoriteLoading","state","user","useState","favorite","setFavorite","useEffect","some","recipeId","_id","title","description","className","onClick","addRecipeToFavorite","removeRecipeFromFavorite","Loader","name","href","Sprite","time","IngredientsStyled","TableHead","IngredientList","Ingredient","ImageName","Image","url","Name","Measure","Checkbox","checkIcon","shoppingList","selectShoppingList","ingrLoading","setIngrLoading","removeIngrLoading","ingrId","prevIngrLoading","filter","id","toggleShopingList","action","measure","img","includes","addIngredientToShoppingList","removeIngredientFromShoppingList","ingredients","map","key","obj","useParams","deviceType","selectDeviceType","recipeLoading","recipes","getRecipeById","scale","top","instructions","item","src","undefined","owner","BACKEND_URL","preview","thumb","alt","selectCategories","categories","selectRecipesMainPage","recipesMainPage","selectRecipesByCategory","recipesByCategory","selectFavoriteRecipes","favoriteRecipes","selectPopularRecipes","popularRecipes","selectSearchRecipes","searchRecipes"],"sourceRoot":""}