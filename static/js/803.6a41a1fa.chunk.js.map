{"version":3,"file":"static/js/803.6a41a1fa.chunk.js","mappings":"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","sources":["components/Recipes/RecipeThumb.jsx","components/Recipes/Recipes.styled.jsx","components/Styled/PageContainer.styled.jsx","components/Styled/PageTitle.styled.jsx","components/CategoryNavi/CategoryNavi.styled.jsx","components/CategoryNavi/CategoryNavi.jsx","components/Recipes/Recipes.jsx","pages/CategoriesPage.jsx","redux/recipes/selectors.js"],"sourcesContent":["import { RecipeThumbStyled } from './Recipes.styled';\n\nconst RecipeThumb = ({ recipe }) => {\n  return (\n    <RecipeThumbStyled>\n      <img src={recipe.thumb} alt=\"recipe\" />\n      <div className=\"title\">{recipe.title}</div>\n    </RecipeThumbStyled>\n  );\n};\n\nexport default RecipeThumb;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const RecipesStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 28px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    gap: 100px 14px;\n  }\n`;\n\nexport const RecipeThumbStyled = styled.div`\n  position: relative;\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-basis: calc((100% - (1 * 32px)) / 2);\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-basis: calc((100% - (3 * 14px)) / 4);\n  }\n\n  & img {\n    border-radius: 8px;\n  }\n\n  & .title {\n    position: absolute;\n    left: 18px;\n    right: 18px;\n    bottom: 26px;\n    background-color: #fff;\n    padding: 16px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.25;\n    letter-spacing: -0.24px;\n    border-radius: 8px;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      left: 16px;\n      right: 16px;\n      bottom: 23px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\n\nexport const PageContainer = styled.div`\n  ${container};\n  padding-top: 30px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 53px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-top: 81px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\n\nexport const PageTitle = styled.h1`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { NavLink } from 'react-router-dom';\nimport { transition } from 'helpers';\nimport { mediaSizes } from 'constants';\n\nexport const CategoryNaviStyled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  width: 100%;\n  margin-bottom: 32px;\n  position: relative;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0px;\n    bottom: 0px;\n    width: 100%;\n    height: 1px;\n    background-color: ${colors.color3};\n  }\n\n  & .slider {\n    padding: 0 0px 23px 19px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      padding: 0 0px 18px 19px;\n    }\n  }\n\n  & .slide {\n    width: auto;\n  }\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  font-style: normal;\n  font-size: 14px;\n  line-height: 1;\n  color: ${colors.color3};\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  ${transition('opacity', 'color')};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 11px;\n  }\n\n  &:hover {\n    color: ${colors.color13};\n  }\n\n  &.active {\n    color: ${colors.color1};\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      left: 0;\n      bottom: -23px;\n      height: 2px;\n      width: 100%;\n      background-color: ${colors.color1};\n\n      @media screen and (min-width: ${mediaSizes.tablet}) {\n        bottom: -18px;\n      }\n    }\n  }\n\n  & .search {\n    fill: transparent;\n    stroke: ${colors.color14};\n    width: 24px;\n    height: 24px;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { LinkStyled, CategoryNaviStyled } from './CategoryNavi.styled';\nimport { selectCategories } from 'redux/recipes/selectors';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Mousewheel, Keyboard } from 'swiper';\nimport 'swiper/css';\nimport 'swiper/css/pagination';\nimport { selectDeviceType } from 'redux/general/selectors';\n\nconst CategoryNavi = () => {\n  const categories = useSelector(selectCategories);\n  const deviceType = useSelector(selectDeviceType);\n\n  let spaceBetween = 8;\n  if (deviceType === 'tablet' || deviceType === 'desktop') {\n    spaceBetween = 23;\n  }\n\n  return (\n    <>\n      <CategoryNaviStyled>\n        <Swiper\n          slidesPerView={'auto'}\n          spaceBetween={spaceBetween}\n          modules={[Mousewheel, Keyboard]}\n          mousewheel={true}\n          keyboard={true}\n          direction=\"horizontal\"\n          className=\"slider\"\n        >\n          {categories.map(category => (\n            <SwiperSlide key={category._id} className=\"slide\">\n              <LinkStyled to={`/categories/${category.name}`}>\n                {category.name}\n              </LinkStyled>\n            </SwiperSlide>\n          ))}\n          {categories.map(category => (\n            <SwiperSlide key={`${category._id}-1`} className=\"slide\">\n              <LinkStyled to={`/categories/${category.name}`}>\n                {category.name}\n              </LinkStyled>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </CategoryNaviStyled>\n    </>\n  );\n};\n\nexport default CategoryNavi;\n","// import PropTypes from 'prop-types';\nimport RecipeThumb from './RecipeThumb';\nimport { RecipesStyled } from './Recipes.styled';\n\nconst Recipes = ({ recipes }) => {\n  return (\n    <RecipesStyled>\n      {recipes.map(recipe => (\n        <RecipeThumb key={recipe._id} recipe={recipe} />\n      ))}\n    </RecipesStyled>\n  );\n};\n\nexport default Recipes;\n","import CategoryNavi from 'components/CategoryNavi/CategoryNavi';\nimport Recipes from 'components/Recipes/Recipes';\nimport { PageContainer } from 'components/Styled/PageContainer.styled';\nimport { PageTitle } from 'components/Styled/PageTitle.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getRecipesByCategory } from 'redux/recipes/operations';\nimport {\n  selectCategories,\n  selectRecipesByCategory,\n} from 'redux/recipes/selectors';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const recipes = useSelector(selectRecipesByCategory);\n  const categories = useSelector(selectCategories);\n  let { category } = useParams();\n\n  useEffect(() => {\n    let categoryName = category;\n    if (!category && categories.length) {\n      categoryName = categories[0].name;\n    }\n    if (categoryName) {\n      dispatch(getRecipesByCategory(categoryName));\n    }\n  }, [dispatch, categories, category]);\n\n  return (\n    <PageContainer>\n      <PageTitle>Categories</PageTitle>\n      <CategoryNavi />\n      <Recipes recipes={recipes} />\n    </PageContainer>\n  );\n};\n\nexport default Categories;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\n"],"names":["recipe","src","thumb","alt","className","title","RecipesStyled","styled","mediaSizes","RecipeThumbStyled","PageContainer","container","PageTitle","colors","CategoryNaviStyled","LinkStyled","NavLink","transition","categories","useSelector","selectCategories","deviceType","selectDeviceType","spaceBetween","slidesPerView","modules","Mousewheel","Keyboard","mousewheel","keyboard","direction","map","category","to","name","_id","recipes","RecipeThumb","dispatch","useDispatch","selectRecipesByCategory","useParams","useEffect","categoryName","length","getRecipesByCategory","state","selectRecipesMainPage","recipesMainPage","recipesByCategory"],"sourceRoot":""}