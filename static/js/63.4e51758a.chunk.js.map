{"version":3,"file":"static/js/63.4e51758a.chunk.js","mappings":"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","sources":["components/Recipes/RecipeThumb.jsx","components/Recipes/Recipes.styled.jsx","components/CategoriesPreview/CategoriesPreview.styled.jsx","components/CategoriesPreview/Category.jsx","components/CategoriesPreview/CategoriesPreview.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/Hero/Hero.styled.jsx","components/Hero/Hero.jsx","pages/MainPage.jsx","redux/recipes/selectors.js"],"sourcesContent":["import { RecipeThumbStyled } from './Recipes.styled';\n\nconst RecipeThumb = ({ recipe }) => {\n  return (\n    <RecipeThumbStyled>\n      <img src={recipe.thumb} alt=\"recipe\" />\n      <div className=\"title\">{recipe.title}</div>\n    </RecipeThumbStyled>\n  );\n};\n\nexport default RecipeThumb;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const RecipesStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 28px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    gap: 100px 14px;\n  }\n`;\n\nexport const RecipeThumbStyled = styled.div`\n  position: relative;\n  flex-basis: 100%;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-basis: calc((100% - (1 * 32px)) / 2);\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-basis: calc((100% - (3 * 14px)) / 4);\n  }\n\n  & img {\n    border-radius: 8px;\n  }\n\n  & .title {\n    position: absolute;\n    left: 18px;\n    right: 18px;\n    bottom: 26px;\n    background-color: #fff;\n    padding: 16px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.25;\n    letter-spacing: -0.24px;\n    border-radius: 8px;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      left: 16px;\n      right: 16px;\n      bottom: 23px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { container } from 'helpers';\n\nexport const CategoriesPreviewStyled = styled.div`\n  ${container};\n  position: relative;\n\n  & .other-button-wrapper {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport const CategoryStyled = styled.div`\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-bottom: 100px;\n  }\n\n  &.last {\n    margin-bottom: 40px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 32px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      margin-bottom: 14px;\n    }\n  }\n\n  & .slider {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 40px;\n    }\n  }\n\n  & button.all {\n    margin-left: auto;\n  }\n`;\n\nexport const CategoryTitle = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 44px;\n    margin-bottom: 40px;\n  }\n`;\n","import { Button } from 'components/Styled';\nimport { CategoryStyled, CategoryTitle } from './CategoriesPreview.styled';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.min.css';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport RecipeThumb from 'components/Recipes/RecipeThumb';\n\nconst Category = ({ categoryName, category, last }) => {\n  const navigate = useNavigate();\n  const deviceType = useSelector(selectDeviceType);\n\n  let slidesPerView = 1;\n  let slidesPerGroup = 1;\n  if (deviceType === 'tablet') {\n    slidesPerView = 2;\n    slidesPerGroup = 2;\n  }\n  if (deviceType === 'desktop') {\n    slidesPerView = 4;\n    slidesPerGroup = 4;\n  }\n\n  const showAll = categoryName => {\n    navigate(`/categories/${categoryName}`);\n  };\n\n  return (\n    <CategoryStyled className={last ? 'last' : ''}>\n      <CategoryTitle>{categoryName}</CategoryTitle>\n      <Swiper\n        spaceBetween={32}\n        slidesPerView={slidesPerView}\n        slidesPerGroup={slidesPerGroup}\n        navigation\n        className=\"slider\"\n      >\n        {category.map(recipe => (\n          <SwiperSlide key={recipe._id}>\n            <RecipeThumb recipe={recipe} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      <Button className=\"type3 all\" onClick={() => showAll(categoryName)}>\n        See all\n      </Button>\n    </CategoryStyled>\n  );\n};\n\nexport default Category;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { CategoriesPreviewStyled } from './CategoriesPreview.styled';\nimport { selectRecipesMainPage } from 'redux/recipes/selectors';\nimport { useEffect, useMemo } from 'react';\nimport { getRecipesByCategoryList } from 'redux/recipes/operations';\nimport Category from './Category';\nimport { Button } from 'components/Styled';\n\nconst CategoriesPreview = () => {\n  const dispatch = useDispatch();\n  // const [categories, setCategories] = useState([\n  //   'Breakfast',\n  //   'Miscellaneous',\n  //   'Vegan',\n  //   'Desserts',\n  // ]);\n  // const categories = useSelector(selectCategories);\n  const categories = useMemo(\n    () => ['Breakfast', 'Miscellaneous', 'Vegan', 'Dessert'],\n    []\n  );\n  const recipes = useSelector(selectRecipesMainPage);\n\n  console.log(recipes);\n\n  useEffect(() => {\n    dispatch(getRecipesByCategoryList({ categories: categories }));\n  }, [dispatch, categories]);\n\n  return (\n    <CategoriesPreviewStyled>\n      {recipes &&\n        recipes.map((category, index) => (\n          <Category\n            key={index}\n            categoryName={categories[index]}\n            category={category}\n            last={index + 1 === recipes.length}\n          />\n        ))}\n      <div className=\"other-button-wrapper\">\n        <Button className=\"type4\">Ohter categories</Button>\n      </div>\n    </CategoriesPreviewStyled>\n  );\n};\n\nexport default CategoriesPreview;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const SearchbarStyled = styled.div`\n  width: 295px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 369px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 510px;\n  }\n`;\n\nexport const FormStyled = styled.form`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  border-radius: 24px 44px;\n  border: 1px solid ${colors.color12};\n  outline: none;\n  padding: 17px 126px 17px 32px;\n  font-size: 12px;\n  line-height: 1.5;\n  width: 100%;\n  background-color: #fff;\n  color: ${colors.color14};\n  box-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  ${transition('width', 'border-bottom')}\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 18px 170px 18px 38px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding: 23px 170px 23px 48px;\n    font-size: 16px;\n  }\n\n  &::placeholder {\n    color: ${colors.color13};\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color6};\n    border: 1px solid rgba(250, 250, 250, 0.2);\n    color: rgba(250, 250, 250, 0.5);\n  }\n\n  /* &:not(:placeholder-shown),\n  &:focus {\n    width: 360px;\n    border-bottom: 1px solid ${colors.color1};\n  } */\n`;\n\nexport const Button = styled.button`\n  border-radius: 24px 44px;\n  position: absolute;\n  right: -1px;\n  top: 0px;\n  height: 100%;\n  border: 0;\n  outline: none;\n  color: ${colors.color7};\n  font-size: 14px;\n  background-color: ${colors.color8};\n  padding: 0 32px;\n  cursor: pointer;\n  ${transition('background-color')}\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 0 52px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  &:hover {\n    background-color: ${colors.color1};\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color1};\n    &:hover {\n      background-color: ${colors.color8};\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { Button, FormStyled, Input, SearchbarStyled } from './Searchbar.styled';\n\nconst Searchbar = () => {\n  const [query, setQuery] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <SearchbarStyled>\n      <FormStyled onSubmit={submitHandler}>\n        <Input\n          name=\"searchQuery\"\n          type=\"text\"\n          value={query}\n          placeholder=\"Enter the text\"\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </FormStyled>\n    </SearchbarStyled>\n  );\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { container } from 'helpers';\n\nexport const HeroStyled = styled.div`\n  ${container};\n  padding-top: 47px;\n  padding-bottom: 160px;\n  text-align: center;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 121px;\n    padding-bottom: 250px;\n    text-align: left;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-bottom: 350px;\n  }\n`;\n\nexport const HeroBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  & .bg0 {\n    position: absolute;\n    top: 110px;\n    right: -100px;\n    width: 332px;\n    height: 640px;\n    fill: ${colors.color11};\n    z-index: 0;\n    transform: rotateZ(12deg);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 0;\n      right: -16px;\n      transform: rotateZ(0deg);\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      display: none;\n    }\n  }\n\n  & .bg0-desktop {\n    display: none;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      display: block;\n      position: absolute;\n      top: -60px;\n      right: -100px;\n      width: 725px;\n      height: 689px;\n      fill: ${colors.color11};\n      z-index: 0;\n      transform: rotateZ(0deg);\n    }\n  }\n\n  & .bg1 {\n    position: absolute;\n    top: 70px;\n    left: 0;\n    width: 45px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n  }\n\n  & .bg1-tablet {\n    position: absolute;\n    top: 40px;\n    left: -105px;\n    width: 185px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 10px;\n    }\n  }\n\n  & .bg2 {\n    position: absolute;\n    top: 240px;\n    right: -270px;\n    width: 620px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 140px;\n      right: -210px;\n      width: 620px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 200px;\n      right: -30px;\n      width: 620px;\n    }\n  }\n\n  & .bg3 {\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    width: 293px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n    transform: translateX(-50%);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 160px;\n      transform: translateX(10%);\n      width: 340px;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 120px;\n      transform: translateX(10%);\n      width: 500px;\n    }\n  }\n\n  & .bg4-tablet {\n    position: absolute;\n    top: 470px;\n    left: 50%;\n    width: 200px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n    transform: translateX(100px);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      display: block;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 540px;\n      width: 220px;\n      transform: translateX(350px);\n    }\n  }\n`;\n\nexport const HeroWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 364px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 505px;\n  }\n\n  & h1 {\n    font-size: 60px;\n    line-height: 1;\n    font-weight: 400;\n    margin-bottom: 14px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 72px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 100px;\n      letter-spacing: -0.005em;\n    }\n\n    .theme.dark & {\n      color: ${colors.color7};\n    }\n\n    & span {\n      color: ${colors.color1};\n    }\n  }\n\n  & .hero-text {\n    font-size: 14px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    width: 248px;\n    max-width: 100%;\n    margin: 0 auto;\n    margin-bottom: 364px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 32px;\n      width: 362px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 18px;\n      width: 485px;\n      margin-bottom: 50px;\n    }\n  }\n\n  & .hero-card {\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    transform: translateX(-100px);\n    background-color: ${colors.color7};\n    padding: 8px;\n    border-radius: 8px;\n    width: 255px;\n    max-width: 100%;\n    text-align: left;\n    display: block;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.5;\n    letter-spacing: -0.24px;\n    box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.1);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 160px;\n      transform: translateX(250px);\n      width: 260px;\n      padding: 12px;\n      font-size: 14px;\n      line-height: 1.4;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 220px;\n      transform: translateX(690px);\n      width: 298px;\n      padding: 16px;\n    }\n\n    & span {\n      color: ${colors.color1};\n    }\n\n    & a {\n      float: right;\n      margin-top: 7px;\n      display: inline-flex;\n      align-items: center;\n      gap: 4px;\n      color: ${colors.color15};\n      font-size: 12px;\n\n      & .icon {\n        line-height: 1.2;\n        font-weight: 400;\n        width: 18px;\n        height: 18px;\n        stroke: ${colors.color15};\n        fill: transparent;\n      }\n    }\n  }\n`;\n\n//\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { HeroBackground, HeroStyled, HeroWrapper } from './Hero.styled';\nimport Sprite from 'images/sprite.svg';\nimport bg1Mobile from 'images/Hero/bg1-mobile@2x.png';\nimport bg1Tablet from 'images/Hero/bg1-tablet@2x.png';\nimport bg2Mobile from 'images/Hero/bg2-mobile@2x.png';\nimport bg3Mobile from 'images/Hero/bg3-mobile@2x.png';\nimport bg4Tablet from 'images/Hero/bg4-tablet@2x.png';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\n\nconst Hero = () => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    <HeroStyled>\n      <HeroBackground>\n        <svg className=\"bg0\">\n          <use href={`${Sprite}#bg-type1`}></use>\n        </svg>\n        <svg className=\"bg0-desktop\">\n          <use href={`${Sprite}#bg-type2`}></use>\n        </svg>\n        {deviceType === 'mobile' && (\n          <img className=\"bg1\" src={bg1Mobile} alt=\"bg\" />\n        )}\n        {(deviceType === 'tablet' || deviceType === 'desktop') && (\n          <img className=\"bg1-tablet\" src={bg1Tablet} alt=\"bg\" />\n        )}\n        <img className=\"bg2\" src={bg2Mobile} alt=\"bg\" />\n        <img className=\"bg3\" src={bg3Mobile} alt=\"bg\" />\n        {(deviceType === 'tablet' || deviceType === 'desktop') && (\n          <img className=\"bg4-tablet\" src={bg4Tablet} alt=\"bg\" />\n        )}\n      </HeroBackground>\n\n      <HeroWrapper>\n        <h1>\n          <span>So</span>Yummy\n        </h1>\n        <div className=\"hero-text\">\n          \"What to cook?\" is not only a recipe app, it is, in fact, your\n          cookbook. You can add your own recipes to save them for the future.\n        </div>\n        <div className=\"hero-card\">\n          <div>\n            <span>Delicious and healthy</span> way to enjoy a variety of fresh\n            ingredients in one satisfying meal\n          </div>\n          <NavLink to=\"/\">\n            See recipes\n            <svg className=\"icon\">\n              <use href={`${Sprite}#icon-arrow-right`}></use>\n            </svg>\n          </NavLink>\n        </div>\n        <Searchbar />\n      </HeroWrapper>\n    </HeroStyled>\n  );\n};\n\nexport default Hero;\n","import CategoriesPreview from 'components/CategoriesPreview/CategoriesPreview';\nimport Hero from 'components/Hero/Hero';\n\nconst Main = () => {\n  return (\n    <>\n      <Hero />\n      <CategoriesPreview />\n    </>\n  );\n};\n\nexport default Main;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\n"],"names":["recipe","src","thumb","alt","className","title","RecipesStyled","styled","mediaSizes","RecipeThumbStyled","CategoriesPreviewStyled","container","CategoryStyled","CategoryTitle","colors","categoryName","category","last","navigate","useNavigate","deviceType","useSelector","selectDeviceType","slidesPerView","slidesPerGroup","spaceBetween","navigation","map","RecipeThumb","_id","onClick","showAll","dispatch","useDispatch","categories","useMemo","recipes","selectRecipesMainPage","console","log","useEffect","getRecipesByCategoryList","index","length","SearchbarStyled","FormStyled","Input","transition","Button","useState","query","setQuery","onSubmit","e","preventDefault","name","type","value","placeholder","onChange","target","HeroStyled","HeroBackground","HeroWrapper","href","Sprite","bg1Mobile","bg1Tablet","bg2Mobile","bg3Mobile","bg4Tablet","to","selectCategories","state","recipesMainPage","selectRecipesByCategory","recipesByCategory"],"sourceRoot":""}