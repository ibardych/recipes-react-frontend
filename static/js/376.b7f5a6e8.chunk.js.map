{"version":3,"file":"static/js/376.b7f5a6e8.chunk.js","mappings":"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","sources":["components/Recipes/RecipeThumb.styled.jsx","components/Recipes/RecipeThumb.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/CategoriesPreview/CategoriesPreview.styled.jsx","components/CategoriesPreview/Category.styled.jsx","components/CategoriesPreview/Category.jsx","components/CategoriesPreview/CategoriesPreview.jsx","components/Hero/Hero.styled.jsx","components/Hero/Hero.jsx","pages/MainPage.jsx","redux/recipes/selectors.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipeThumbStyled = styled(NavLink)`\n  position: relative;\n  flex-basis: 100%;\n  background: url(${({ url }) => url}) no-repeat center #f5f5f5;\n  background-size: cover;\n  border-radius: 8px;\n  display: block;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-basis: calc((100% - (1 * 32px)) / 2);\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-basis: calc((100% - (3 * 14px)) / 4);\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    padding-top: 100%;\n  }\n\n  & .title {\n    position: absolute;\n    left: 18px;\n    right: 18px;\n    bottom: 26px;\n    background-color: #fff;\n    padding: 16px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.25;\n    letter-spacing: -0.24px;\n    border-radius: 8px;\n    color: ${colors.color15};\n\n    .theme.dark & {\n      background-color: ${colors.color6};\n      color: ${colors.color7};\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      left: 16px;\n      right: 16px;\n      bottom: 23px;\n    }\n  }\n`;\n","import { RecipeThumbStyled } from './RecipeThumb.styled';\n\nconst RecipeThumb = ({ recipe }) => {\n  const { _id, title, thumb } = recipe;\n\n  return (\n    <RecipeThumbStyled to={`/recipe/${_id}`} url={thumb}>\n      <div className=\"title\">{title}</div>\n    </RecipeThumbStyled>\n  );\n};\n\nexport default RecipeThumb;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const SearchbarStyled = styled.div`\n  width: 295px;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 369px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 510px;\n  }\n`;\n\nexport const FormStyled = styled.form`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  border-radius: 24px 44px;\n  border: 1px solid ${colors.color12};\n  outline: none;\n  padding: 17px 126px 17px 32px;\n  font-size: 12px;\n  line-height: 1.5;\n  width: 100%;\n  background-color: #fff;\n  color: ${colors.color14};\n  box-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  ${transition('width', 'border-bottom')}\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 18px 170px 18px 38px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding: 23px 170px 23px 48px;\n    font-size: 16px;\n  }\n\n  &::placeholder {\n    color: ${colors.color13};\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color6};\n    border: 1px solid rgba(250, 250, 250, 0.2);\n    color: rgba(250, 250, 250, 0.5);\n  }\n\n  /* &:not(:placeholder-shown),\n  &:focus {\n    width: 360px;\n    border-bottom: 1px solid ${colors.color1};\n  } */\n`;\n\nexport const Button = styled.button`\n  border-radius: 24px 44px;\n  position: absolute;\n  right: -1px;\n  top: 0px;\n  height: 100%;\n  border: 0;\n  outline: none;\n  color: ${colors.color7};\n  font-size: 14px;\n  background-color: ${colors.color8};\n  padding: 0 32px;\n  cursor: pointer;\n  ${transition('background-color')}\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 0 52px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  &:hover {\n    background-color: ${colors.color1};\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color1};\n    &:hover {\n      background-color: ${colors.color8};\n    }\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport { Button, FormStyled, Input, SearchbarStyled } from './Searchbar.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findRecipes } from 'redux/recipes/operations';\nimport { selectSearchRecipes } from 'redux/recipes/selectors';\nimport { setSearchData } from 'redux/recipes/slice';\n\nconst Searchbar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const search = useSelector(selectSearchRecipes);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (location.pathname !== '/search') navigate('/search');\n    const { filter, query } = search;\n    dispatch(findRecipes({ filter, query, page: 1, limit: 8 }));\n  };\n\n  const handleInputChange = e => {\n    dispatch(setSearchData({ query: e.target.value }));\n  };\n\n  return (\n    <SearchbarStyled>\n      <FormStyled onSubmit={submitHandler}>\n        <Input\n          name=\"searchQuery\"\n          type=\"text\"\n          value={search.query}\n          placeholder=\"Enter the text\"\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </FormStyled>\n    </SearchbarStyled>\n  );\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\nimport { container } from 'helpers';\n\nexport const CategoriesPreviewStyled = styled.div`\n  ${container};\n  position: relative;\n  min-height: 300px;\n\n  & .other-button-wrapper {\n    display: flex;\n    justify-content: center;\n  }\n`;\n","import { colors } from 'constants';\nimport { mediaSizes } from 'constants';\n\nconst { default: styled } = require('@emotion/styled');\n\nexport const CategoryStyled = styled.div`\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-bottom: 100px;\n  }\n\n  &.last {\n    margin-bottom: 40px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 32px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      margin-bottom: 14px;\n    }\n  }\n\n  & .slider {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 40px;\n    }\n  }\n\n  & button.all {\n    margin-left: auto;\n  }\n`;\n\nexport const CategoryTitle = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 32px;\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 44px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const SliderWrapper = styled.div`\n  position: relative;\n\n  & .swiper-button {\n    top: 50%;\n    color: #919191;\n    transform: translateY(-50%);\n    background-color: #fff;\n    border-radius: 100px;\n    width: 30px;\n    height: 30px;\n    box-shadow: 1px 1px 3px 0px rgba(0, 0, 0, 0.2);\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      left: 30px;\n    }\n\n    &::after {\n      font-size: 18px;\n      position: relative;\n    }\n\n    &.prev {\n      left: 20px;\n      &::after {\n        right: 2px;\n      }\n      @media screen and (min-width: ${mediaSizes.desktop}) {\n        left: 20px;\n      }\n    }\n    &.next {\n      right: 20px;\n      &::after {\n        left: 2px;\n      }\n      @media screen and (min-width: ${mediaSizes.desktop}) {\n        right: 20px;\n      }\n    }\n  }\n\n  & .swiper-button-disabled {\n    display: none;\n  }\n`;\n","import { Button } from 'components/Styled';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Mousewheel, Keyboard, Navigation } from 'swiper';\nimport 'swiper/swiper.min.css';\nimport 'swiper/css/navigation';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport RecipeThumb from 'components/Recipes/RecipeThumb';\nimport {\n  CategoryStyled,\n  CategoryTitle,\n  SliderWrapper,\n} from './Category.styled';\n\nconst Category = ({ categoryName, category, last, index }) => {\n  const navigate = useNavigate();\n  const deviceType = useSelector(selectDeviceType);\n\n  let slidesPerView = 1;\n  let slidesPerGroup = 1;\n  if (deviceType === 'tablet') {\n    slidesPerView = 2;\n    slidesPerGroup = 2;\n  }\n  if (deviceType === 'desktop') {\n    slidesPerView = 4;\n    slidesPerGroup = 4;\n  }\n\n  const showAll = categoryName => {\n    navigate(`/categories/${categoryName}`);\n  };\n\n  return (\n    <CategoryStyled className={last ? 'last' : ''}>\n      <CategoryTitle>{categoryName}</CategoryTitle>\n      <SliderWrapper>\n        <Swiper\n          spaceBetween={32}\n          slidesPerView={slidesPerView}\n          slidesPerGroup={slidesPerGroup}\n          className=\"slider\"\n          modules={[Mousewheel, Keyboard, Navigation]}\n          mousewheel={false}\n          keyboard={false}\n          navigation={{\n            prevEl: `.swiper-button-prev-${index}`,\n            nextEl: `.swiper-button-next-${index}`,\n            disabledClass: `swiper-button-disabled`,\n          }}\n        >\n          {category.map(recipe => (\n            <SwiperSlide key={recipe._id}>\n              <RecipeThumb recipe={recipe} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n        <div\n          className={`swiper-button-prev swiper-button-prev-${index} swiper-button prev`}\n        ></div>\n        <div\n          className={`swiper-button-next swiper-button-next-${index} swiper-button next`}\n        ></div>\n      </SliderWrapper>\n      <Button className=\"type3 all\" onClick={() => showAll(categoryName)}>\n        See all\n      </Button>\n    </CategoryStyled>\n  );\n};\n\nexport default Category;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { CategoriesPreviewStyled } from './CategoriesPreview.styled';\nimport { selectRecipesMainPage } from 'redux/recipes/selectors';\nimport { useEffect, useMemo } from 'react';\nimport { getRecipesByCategoryList } from 'redux/recipes/operations';\nimport Category from './Category';\nimport { ButtonLink } from 'components/Styled';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst CategoriesPreview = () => {\n  const dispatch = useDispatch();\n  const categories = useMemo(\n    () => ['Breakfast', 'Miscellaneous', 'Vegan', 'Dessert'],\n    []\n  );\n  const recipes = useSelector(selectRecipesMainPage);\n  const recipesMainPageLoading = useSelector(\n    state => state.recipes.recipesMainPageLoading\n  );\n\n  useEffect(() => {\n    dispatch(getRecipesByCategoryList({ categories: categories }));\n  }, [dispatch, categories]);\n\n  return (\n    <CategoriesPreviewStyled>\n      {recipesMainPageLoading ? (\n        <LoaderSmall scale=\"1\" name=\"\" />\n      ) : (\n        <>\n          {recipes &&\n            recipes.map((category, index) => (\n              <Category\n                key={index}\n                categoryName={categories[index]}\n                category={category}\n                last={index + 1 === recipes.length}\n                index={index}\n              />\n            ))}\n          <div className=\"other-button-wrapper\">\n            <ButtonLink to={`/categories`} className=\"type4\">\n              Ohter categories\n            </ButtonLink>\n          </div>\n        </>\n      )}\n    </CategoriesPreviewStyled>\n  );\n};\n\nexport default CategoriesPreview;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { container } from 'helpers';\n\nexport const HeroStyled = styled.div`\n  ${container};\n  padding-top: 47px;\n  padding-bottom: 160px;\n  text-align: center;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 121px;\n    padding-bottom: 250px;\n    text-align: left;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-bottom: 350px;\n  }\n`;\n\nexport const HeroBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  & .bg0 {\n    position: absolute;\n    top: 110px;\n    right: -100px;\n    width: 332px;\n    height: 640px;\n    fill: ${colors.color11};\n    z-index: 0;\n    transform: rotateZ(12deg);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 0;\n      right: -16px;\n      transform: rotateZ(0deg);\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      display: none;\n    }\n  }\n\n  & .bg0-desktop {\n    display: none;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      display: block;\n      position: absolute;\n      top: -60px;\n      right: -100px;\n      width: 725px;\n      height: 689px;\n      fill: ${colors.color11};\n      z-index: 0;\n      transform: rotateZ(0deg);\n    }\n  }\n\n  & .bg1 {\n    position: absolute;\n    top: 70px;\n    left: 0;\n    width: 45px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n  }\n\n  & .bg1-tablet {\n    position: absolute;\n    top: 40px;\n    left: -105px;\n    width: 185px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 10px;\n    }\n  }\n\n  & .bg2 {\n    position: absolute;\n    top: 240px;\n    right: -270px;\n    width: 620px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 140px;\n      right: -210px;\n      width: 620px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 200px;\n      right: -30px;\n      width: 620px;\n    }\n  }\n\n  & .bg3 {\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    width: 293px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n    transform: translateX(-50%);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 160px;\n      transform: translateX(10%);\n      width: 340px;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 120px;\n      transform: translateX(10%);\n      width: 500px;\n    }\n  }\n\n  & .bg4-tablet {\n    position: absolute;\n    top: 470px;\n    left: 50%;\n    width: 200px;\n    max-width: none;\n    height: auto;\n    z-index: 0;\n    transform: translateX(100px);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      display: block;\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 540px;\n      width: 220px;\n      transform: translateX(350px);\n    }\n  }\n`;\n\nexport const HeroWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 364px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 505px;\n  }\n\n  & h1 {\n    font-size: 60px;\n    line-height: 1;\n    font-weight: 400;\n    margin-bottom: 14px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 72px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 100px;\n      letter-spacing: -0.005em;\n    }\n\n    .theme.dark & {\n      color: ${colors.color7};\n    }\n\n    & span {\n      color: ${colors.color1};\n    }\n  }\n\n  & .hero-text {\n    font-size: 14px;\n    line-height: 1.3;\n    letter-spacing: -0.02em;\n    width: 248px;\n    max-width: 100%;\n    margin: 0 auto;\n    margin-bottom: 364px;\n\n    .theme.dark & {\n      color: ${colors.color7};\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 32px;\n      width: 362px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 18px;\n      width: 485px;\n      margin-bottom: 50px;\n    }\n  }\n\n  & .hero-card {\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    transform: translateX(-100px);\n    background-color: ${colors.color7};\n    padding: 8px;\n    border-radius: 8px;\n    width: 255px;\n    max-width: 100%;\n    text-align: left;\n    display: block;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.5;\n    letter-spacing: -0.24px;\n    box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.1);\n\n    .theme.dark & {\n      background-color: ${colors.color6};\n      color: ${colors.color7};\n      box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.3);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 160px;\n      transform: translateX(250px);\n      width: 260px;\n      padding: 12px;\n      font-size: 14px;\n      line-height: 1.4;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 220px;\n      transform: translateX(690px);\n      width: 298px;\n      padding: 16px;\n    }\n\n    & span {\n      color: ${colors.color1};\n    }\n\n    & a {\n      float: right;\n      margin-top: 7px;\n      display: inline-flex;\n      align-items: center;\n      gap: 4px;\n      color: ${colors.color15};\n      font-size: 12px;\n\n      .theme.dark & {\n        color: ${colors.color7};\n      }\n\n      & .icon {\n        line-height: 1.2;\n        font-weight: 400;\n        width: 18px;\n        height: 18px;\n        stroke: ${colors.color15};\n        fill: transparent;\n\n        .theme.dark & {\n          stroke: ${colors.color7};\n        }\n      }\n    }\n  }\n`;\n\n//\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { HeroBackground, HeroStyled, HeroWrapper } from './Hero.styled';\nimport Sprite from 'images/sprite.svg';\nimport bg1Mobile from 'images/Hero/bg1-mobile@2x.png';\nimport bg1Tablet from 'images/Hero/bg1-tablet@2x.png';\nimport bg2Mobile from 'images/Hero/bg2-mobile@2x.png';\nimport bg3Mobile from 'images/Hero/bg3-mobile@2x.png';\nimport bg4Tablet from 'images/Hero/bg4-tablet@2x.png';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\n\nconst Hero = () => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    <HeroStyled>\n      <HeroBackground>\n        <svg className=\"bg0\">\n          <use href={`${Sprite}#bg-type1`}></use>\n        </svg>\n        <svg className=\"bg0-desktop\">\n          <use href={`${Sprite}#bg-type2`}></use>\n        </svg>\n        {deviceType === 'mobile' && (\n          <img className=\"bg1\" src={bg1Mobile} alt=\"bg\" />\n        )}\n        {(deviceType === 'tablet' || deviceType === 'desktop') && (\n          <img className=\"bg1-tablet\" src={bg1Tablet} alt=\"bg\" />\n        )}\n        <img className=\"bg2\" src={bg2Mobile} alt=\"bg\" />\n        <img className=\"bg3\" src={bg3Mobile} alt=\"bg\" />\n        {(deviceType === 'tablet' || deviceType === 'desktop') && (\n          <img className=\"bg4-tablet\" src={bg4Tablet} alt=\"bg\" />\n        )}\n      </HeroBackground>\n\n      <HeroWrapper>\n        <h1>\n          <span>So</span>Yummy\n        </h1>\n        <div className=\"hero-text\">\n          \"What to cook?\" is not only a recipe app, it is, in fact, your\n          cookbook. You can add your own recipes to save them for the future.\n        </div>\n        <div className=\"hero-card\">\n          <div>\n            <span>Delicious and healthy</span> way to enjoy a variety of fresh\n            ingredients in one satisfying meal\n          </div>\n          <NavLink to=\"/categories\">\n            See recipes\n            <svg className=\"icon\">\n              <use href={`${Sprite}#icon-arrow-right`}></use>\n            </svg>\n          </NavLink>\n        </div>\n        <Searchbar />\n      </HeroWrapper>\n    </HeroStyled>\n  );\n};\n\nexport default Hero;\n","import CategoriesPreview from 'components/CategoriesPreview/CategoriesPreview';\nimport Hero from 'components/Hero/Hero';\n\nconst Main = () => {\n  return (\n    <>\n      <Hero />\n      <CategoriesPreview />\n    </>\n  );\n};\n\nexport default Main;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\nexport const selectRecipe = state => state.recipes.recipe;\nexport const selectFavoriteRecipes = state => state.recipes.favoriteRecipes;\nexport const selectPopularRecipes = state => state.recipes.popularRecipes;\nexport const selectSearchRecipes = state => state.recipes.searchRecipes;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["RecipeThumbStyled","styled","NavLink","url","mediaSizes","colors","recipe","_id","title","thumb","to","className","SearchbarStyled","FormStyled","Input","transition","Button","dispatch","useDispatch","navigate","useNavigate","location","useLocation","search","useSelector","selectSearchRecipes","onSubmit","e","preventDefault","pathname","filter","query","findRecipes","page","limit","name","type","value","placeholder","onChange","setSearchData","target","CategoriesPreviewStyled","container","require","default","CategoryStyled","div","CategoryTitle","h2","SliderWrapper","categoryName","category","last","index","deviceType","selectDeviceType","slidesPerView","slidesPerGroup","spaceBetween","modules","Mousewheel","Keyboard","Navigation","mousewheel","keyboard","navigation","prevEl","nextEl","disabledClass","map","RecipeThumb","onClick","showAll","categories","useMemo","recipes","selectRecipesMainPage","recipesMainPageLoading","state","useEffect","getRecipesByCategoryList","Loader","scale","length","HeroStyled","HeroBackground","HeroWrapper","href","Sprite","src","bg1Mobile","alt","bg1Tablet","bg2Mobile","bg3Mobile","bg4Tablet","Searchbar","selectCategories","recipesMainPage","selectRecipesByCategory","recipesByCategory","selectRecipe","selectFavoriteRecipes","favoriteRecipes","selectPopularRecipes","popularRecipes","searchRecipes","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","Object","keys","indexOf"],"sourceRoot":""}