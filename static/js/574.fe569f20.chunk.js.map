{"version":3,"file":"static/js/574.fe569f20.chunk.js","mappings":"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","sources":["components/Deco/Deco.styled.jsx","components/Deco/Deco.jsx","components/NoItems/NoItems.jsx","components/NoItems/NoItems.styled.jsx","components/Recipes/RecipeCard.styled.jsx","components/Recipes/RecipeCard.jsx","components/Styled/PageContainer.styled.jsx","components/Styled/PageTitle.styled.jsx","redux/ownRecipes/selectors.js","components/MyRecipes/MyRecipes.styled.jsx","components/MyRecipes/MyRecipes.jsx","pages/MyRecipesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\n\nexport const DecoStyled = styled.div`\n  pointer-events: none;\n\n  & .deco1 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 90px;\n    left: 30%;\n    transform: rotate(12deg);\n    z-index: 0;\n  }\n\n  & .deco2 {\n    width: 9px;\n    height: 9px;\n    background-color: #8f8f8f;\n    border-radius: 2px;\n    position: absolute;\n    top: 160px;\n    left: 50%;\n    transform: rotate(-22deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 170px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 200px;\n    }\n  }\n\n  & .deco3 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 120px;\n    left: 70%;\n    transform: rotate(32deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 150px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 160px;\n    }\n  }\n`;\n","import { DecoStyled } from './Deco.styled';\n\nconst Deco = () => {\n  return (\n    <DecoStyled>\n      <div className=\"deco1\"></div>\n      <div className=\"deco2\"></div>\n      <div className=\"deco3\"></div>\n    </DecoStyled>\n  );\n};\n\nexport default Deco;\n","import img from 'images/no-items@2x.png';\nconst { NoItemsStyled } = require('./NoItems.styled');\n\nconst NoItems = ({ children }) => {\n  return (\n    <NoItemsStyled>\n      <img src={img} alt=\"no items\" />\n      {children}\n    </NoItemsStyled>\n  );\n};\n\nexport default NoItems;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const NoItemsStyled = styled.div`\n  margin: 0 auto;\n  display: block;\n  font-size: 14px;\n  width: 240px;\n  text-align: center;\n  color: rgba(0, 0, 0, 0.5);\n  padding-top: 50px;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  line-height: 1.3;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 0.5);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 20px;\n    width: 440px;\n    margin-bottom: 100px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  & img {\n    width: 100%;\n    display: block;\n    margin-bottom: 24px;\n    width: 440px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      margin-bottom: 32px;\n      width: 350px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipeCardStyled = styled.div`\n  padding: 14px 9px;\n  background-color: #fff;\n  border-radius: 8px;\n  display: flex;\n  gap: 14px;\n  position: relative;\n  width: 100%;\n\n  .theme.dark & {\n    background-color: rgba(${hexToRgb(colors.color6)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 28px 24px;\n    gap: 24px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    gap: 40px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const Image = styled(NavLink)`\n  display: block;\n  width: 124px;\n  height: 124px;\n  border-radius: 8px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow: hidden;\n  background: url(${({ url }) => url}) no-repeat center;\n  background-size: cover;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 228px;\n    height: 228px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 324px;\n    height: 324px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  flex-basis: 100%;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n  letter-spacing: -0.24px;\n  margin-bottom: 14px;\n  padding-right: 30px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 24px;\n    margin-bottom: 28px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Description = styled.div`\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  color: ${colors.color14};\n  margin-bottom: 12px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 0.6);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 14px;\n    margin-bottom: 20px;\n    line-height: 1.3;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    font-size: 18px;\n    margin-bottom: 30px;\n    line-height: 1.4;\n  }\n`;\n\nexport const DeleteButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 9px;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: ${colors.color11};\n  cursor: pointer;\n\n  .theme.dark & {\n    background-color: rgba(${hexToRgb(colors.color9)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    top: 28px;\n    right: 24px;\n    padding: 8px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    top: 40px;\n    right: 40px;\n    padding: 10px;\n  }\n\n  & svg {\n    display: block;\n    stroke: ${colors.color8};\n    fill: transparent;\n    width: 14px;\n    height: 14px;\n\n    .theme.dark & {\n      stroke: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 22px;\n      height: 22px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nexport const Top = styled.div``;\n\nexport const Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Time = styled.div`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.4;\n  letter-spacing: -0.24px;\n  color: ${colors.color15};\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    font-size: 16px;\n  }\n`;\n","import Sprite from 'images/sprite.svg';\nimport {\n  Bottom,\n  DeleteButton,\n  Description,\n  Image,\n  RecipeCardStyled,\n  Time,\n  Title,\n  Top,\n  Wrapper,\n} from './RecipeCard.styled';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { ButtonLink } from 'components/Styled';\n\nconst RecipeCard = ({\n  recipe,\n  type,\n  handleDeleteRecipe,\n  recipeLoading = [],\n}) => {\n  const { _id, preview, description, title, time } = recipe;\n\n  return (\n    <RecipeCardStyled>\n      <Image\n        to={`/recipe/${_id}`}\n        className=\"recipe-image\"\n        url={preview}\n      ></Image>\n      <Wrapper>\n        <Top>\n          <Title>{title}</Title>\n          <Description>{description}</Description>\n          <DeleteButton>\n            <svg onClick={() => handleDeleteRecipe(_id)}>\n              <use href={`${Sprite}#icon-trash`}></use>\n            </svg>\n            {recipeLoading.includes(_id) && (\n              <LoaderSmall name=\"delete-recipe\" />\n            )}\n          </DeleteButton>\n        </Top>\n        <Bottom>\n          <Time>{time}</Time>\n          <ButtonLink className=\"type6\" to={`/recipe/${_id}`}>\n            See recipe\n          </ButtonLink>\n        </Bottom>\n      </Wrapper>\n    </RecipeCardStyled>\n  );\n};\n\nexport default RecipeCard;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\n\nexport const PageContainer = styled.div`\n  ${({ type }) => (type === 'full' ? '' : container)};\n  padding-top: 30px;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 53px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-top: 81px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PageTitle = styled.h1`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n`;\n\nexport const PageSubTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.24px;\n  color: ${colors.color15};\n  margin-bottom: 28px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","export const selectOwnRecipes = state => state.ownRecipes.recipes;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const MyRecipesStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 18px;\n  min-height: 300px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  &.no-items {\n    min-height: 0px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOwnRecipe, getOwnRecipes } from 'redux/ownRecipes/operations';\nimport { selectOwnRecipes } from 'redux/ownRecipes/selectors';\nimport { MyRecipesStyled } from './MyRecipes.styled';\nimport RecipeCard from 'components/Recipes/RecipeCard';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport NoItems from 'components/NoItems/NoItems';\n\nconst MyRecipes = () => {\n  const dispatch = useDispatch();\n  const recipes = useSelector(selectOwnRecipes);\n  const ownRecipesLoading = useSelector(\n    state => state.ownRecipes.ownRecipesLoading\n  );\n  const [recipeLoading, setRecipeLoading] = useState([]);\n  const createRecipeLoading = useSelector(\n    state => state.ownRecipes.createRecipeLoading\n  );\n\n  const removeRecipeLoading = recipeId => {\n    setRecipeLoading(prev => prev.filter(id => id !== recipeId));\n  };\n\n  useEffect(() => {\n    if (!createRecipeLoading) {\n      dispatch(getOwnRecipes());\n    }\n  }, [dispatch, createRecipeLoading]);\n\n  const deleteRecipe = async id => {\n    if (recipeLoading.includes(id)) return;\n    setRecipeLoading([...recipeLoading, id]);\n    await dispatch(deleteOwnRecipe(id));\n    removeRecipeLoading(id);\n  };\n\n  return (\n    <>\n      <MyRecipesStyled className={!recipes.length ? 'no-items' : ''}>\n        {ownRecipesLoading ? (\n          <LoaderSmall scale=\"1\" top=\"100px\" />\n        ) : (\n          !!recipes.length &&\n          recipes.map((recipe, key) => (\n            <RecipeCard\n              key={key}\n              recipe={recipe}\n              handleDeleteRecipe={deleteRecipe}\n              recipeLoading={recipeLoading}\n            />\n          ))\n        )}\n      </MyRecipesStyled>\n      {!recipes.length && !ownRecipesLoading && (\n        <NoItems>You don't have any recipes yet.</NoItems>\n      )}\n    </>\n  );\n};\n\nexport default MyRecipes;\n","import Deco from 'components/Deco/Deco';\nimport MyRecipes from 'components/MyRecipes/MyRecipes';\nimport { PageContainer } from 'components/Styled/PageContainer.styled';\nimport { PageTitle } from 'components/Styled/PageTitle.styled';\n\nconst MyRecipesPage = () => {\n  return (\n    <PageContainer>\n      <Deco />\n      <PageTitle>My recipes</PageTitle>\n      <MyRecipes />\n    </PageContainer>\n  );\n};\n\nexport default MyRecipesPage;\n"],"names":["DecoStyled","styled","colors","mediaSizes","className","NoItemsStyled","require","children","src","img","alt","hexToRgb","RecipeCardStyled","Image","NavLink","url","Wrapper","Title","Description","DeleteButton","Top","Bottom","Time","recipe","handleDeleteRecipe","type","recipeLoading","_id","preview","description","title","time","to","onClick","href","Sprite","includes","Loader","name","PageContainer","container","PageTitle","PageSubTitle","selectOwnRecipes","state","ownRecipes","recipes","MyRecipesStyled","dispatch","useDispatch","useSelector","ownRecipesLoading","useState","setRecipeLoading","createRecipeLoading","removeRecipeLoading","recipeId","prev","filter","id","useEffect","getOwnRecipes","deleteRecipe","deleteOwnRecipe","length","scale","top","map","key","RecipeCard","NoItems","Deco"],"sourceRoot":""}