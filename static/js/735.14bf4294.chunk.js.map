{"version":3,"file":"static/js/735.14bf4294.chunk.js","mappings":"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","sources":["components/Deco/Deco.styled.jsx","components/Deco/Deco.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Styled/PageContainer.styled.jsx","components/Styled/PageTitle.styled.jsx","components/AddRecipe/AddRecipe.styled.jsx","components/AddRecipeForm/AddRecipeForm.styled.jsx","components/Counter/Counter.styled.jsx","components/Counter/Counter.jsx","components/AddRecipeForm/SelectIngredient.styled.jsx","redux/ingredients/selectors.js","components/AddRecipeForm/SelectIngredient.jsx","components/AddRecipeForm/AddRecipeForm.jsx","components/PopularRecipes/PopularRecipes.styled.jsx","components/Recipes/RecipePreview.styled.jsx","components/Recipes/RecipePreview.jsx","components/PopularRecipes/PopularRecipes.jsx","components/AddRecipe/AddRecipe.jsx","pages/AddRecipePage.jsx","redux/recipes/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\n\nexport const DecoStyled = styled.div`\n  pointer-events: none;\n\n  & .deco1 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 90px;\n    left: 30%;\n    transform: rotate(12deg);\n    z-index: 0;\n  }\n\n  & .deco2 {\n    width: 9px;\n    height: 9px;\n    background-color: #8f8f8f;\n    border-radius: 2px;\n    position: absolute;\n    top: 160px;\n    left: 50%;\n    transform: rotate(-22deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 170px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 200px;\n    }\n  }\n\n  & .deco3 {\n    width: 10px;\n    height: 10px;\n    background-color: ${colors.color1};\n    border-radius: 2px;\n    position: absolute;\n    top: 120px;\n    left: 70%;\n    transform: rotate(32deg);\n    z-index: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      top: 150px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      top: 160px;\n    }\n  }\n`;\n","import { DecoStyled } from './Deco.styled';\n\nconst Deco = () => {\n  return (\n    <DecoStyled>\n      <div className=\"deco1\"></div>\n      <div className=\"deco2\"></div>\n      <div className=\"deco3\"></div>\n    </DecoStyled>\n  );\n};\n\nexport default Deco;\n","import styled from '@emotion/styled';\nimport { Pagination } from '@mui/material';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaginationStyled = styled(Pagination)`\n  background: ${colors.color7};\n  box-shadow: 0px 3px 8px -3px rgba(135, 135, 135, 0.4);\n  border-radius: 26px;\n  padding: 14px 10px 10px 10px;\n  width: fit-content;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 10px 15px;\n  }\n\n  .theme.dark & {\n    background-color: ${colors.color6};\n    box-shadow: none;\n  }\n\n  .Mui-selected {\n    background-color: ${colors.color11}!important;\n\n    .theme.dark & {\n      background-color: ${colors.color1}!important;\n      color: ${colors.color7}!important;\n    }\n  }\n\n  .MuiPaginationItem-text {\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 0.7) !important;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { PaginationStyled, PaginationWrapper } from './Pagination.styled';\nimport { selectDeviceType } from 'redux/general/selectors';\n\nexport const Pagination = ({ total, page, handlePage }) => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    total > 1 && (\n      <PaginationWrapper>\n        <PaginationStyled\n          count={total}\n          page={page}\n          siblingCount={deviceType === 'mobile' ? 1 : 2}\n          size={deviceType === 'mobile' ? 'small' : 'medium'}\n          onChange={(_, newPage) => handlePage(newPage)}\n        />\n      </PaginationWrapper>\n    )\n  );\n};\n\nexport default Pagination;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { container } from 'helpers';\n\nexport const PageContainer = styled.div`\n  ${({ type }) => (type === 'full' ? '' : container)};\n  padding-top: 30px;\n  z-index: 1;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding-top: 53px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding-top: 81px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const PageTitle = styled.h1`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${colors.color16};\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n\n  .theme.dark & {\n    color: ${colors.color7};\n  }\n`;\n\nexport const PageSubTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.24px;\n  color: ${colors.color15};\n  margin-bottom: 28px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    margin-bottom: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { mediaSizes } from 'constants';\n\nexport const AddRecipeStyled = styled.div`\n  width: 100%;\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    display: flex;\n    gap: 121px;\n  }\n`;\n\nexport const PopularRecipesWrapper = styled.div`\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 320px;\n    flex-shrink: 0;\n  }\n\n  & .follow-us {\n    margin-top: 0;\n  }\n`;\n\nexport const SocialIcons = styled.ul`\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    display: flex;\n    gap: 20px;\n  }\n\n  & a {\n    display: block;\n    width: 26px;\n    height: 26px;\n\n    & .icon {\n      fill: ${colors.color1};\n      width: 26px;\n      height: 26px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb, transition } from 'helpers';\n\nexport const AddRecipeFormStyled = styled.div`\n  width: 100%;\n`;\n\nexport const TopBlocks = styled.div`\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    display: flex;\n    gap: 32px;\n  }\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const BlockLeft = styled.div`\n  margin-bottom: 32px;\n`;\n\nexport const BlockRight = styled.div`\n  flex-basis: 100%;\n`;\n\nexport const AddImage = styled.div`\n  width: 279px;\n  height: 268px;\n  margin: 0 auto;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: url(${({ image }) => image}) no-repeat center ${colors.color1};\n  background-size: cover;\n  cursor: pointer;\n\n  & .icon {\n    width: 64px;\n    height: 64px;\n    fill: transparent;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n  padding-top: 20px;\n  margin-bottom: 20px;\n  min-height: 44px;\n\n  &.image {\n    padding-top: 0;\n    margin-bottom: 0;\n    min-height: 0px;\n  }\n\n  & .label {\n    position: absolute;\n    top: 18px;\n    left: 0;\n    padding-left: 1px;\n    font-size: 14px;\n    line-height: 1.5;\n    ${transition('opacity', 'transform', 'font-size')};\n    font-weight: 300;\n    pointer-events: none;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 16px;\n    }\n\n    /* & .star {\n      color: $brandcolor;\n      padding-left: 3px;\n      font-weight: 500;\n    } */\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    outline: none;\n    resize: none;\n    border: none;\n    font-size: 16px;\n    color: #333;\n    padding: 0px 0px 5px 0px;\n    border-bottom: 1px solid ${colors.color3};\n    background-color: transparent;\n    transition: border-color 250ms ease-in-out;\n\n    .theme.dark & {\n      border-color: rgba(${hexToRgb(colors.color7)}, 0.3);\n    }\n\n    &:focus {\n      border-bottom: 1px solid ${colors.color1};\n    }\n\n    &:focus + label {\n      opacity: 0.3;\n    }\n\n    &:not(:placeholder-shown) + label {\n      transform: translateY(-20px);\n      font-size: 13px;\n      opacity: 1;\n    }\n\n    &:not(:placeholder-shown) {\n      border-bottom: 1px solid #cdcdcd;\n    }\n  }\n\n  &.select input {\n    display: none;\n\n    &:not(:placeholder-shown) + label {\n      transform: translateY(0px);\n      font-size: 14px;\n      opacity: 1;\n\n      @media screen and (min-width: ${mediaSizes.tablet}) {\n        font-size: 16px;\n      }\n    }\n  }\n\n  &.select label {\n    width: 100%;\n    padding-bottom: 4px;\n    border-bottom: 1px solid ${colors.color3};\n\n    .theme.dark & {\n      border-color: rgba(${hexToRgb(colors.color7)}, 0.3);\n    }\n  }\n\n  &.instructions {\n    padding-top: 0;\n  }\n\n  & textarea {\n    display: block;\n    width: 100%;\n    height: 154px;\n    outline: none;\n    resize: none;\n    border: none;\n    font-size: 16px;\n    line-height: 1.4;\n    color: #333;\n    padding: 10px 16px;\n    background-color: rgba(${hexToRgb(colors.color17)}, 0.157);\n    transition: border-color 250ms ease-in-out;\n    border-radius: 6px;\n\n    .theme.dark & {\n      background-color: transparent;\n      border: 1px solid rgba(${hexToRgb(colors.color7)}, 0.2);\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      font-size: 18px;\n      height: 224px;\n    }\n\n    &::placeholder {\n      font-size: 14px;\n      color: rgba(0, 0, 0, 0.5);\n\n      .theme.dark & {\n        color: rgba(${hexToRgb(colors.color7)}, 0.3);\n      }\n\n      @media screen and (min-width: ${mediaSizes.desktop}) {\n        font-size: 18px;\n      }\n    }\n  }\n\n  & .error {\n    color: ${colors.color10};\n    font-size: 12px;\n    margin-top: 1px;\n    line-height: 1.4;\n    position: absolute;\n  }\n`;\n\nexport const Selected = styled.div`\n  position: absolute;\n  top: 18px;\n  right: 0;\n  font-size: 12px;\n  line-height: 1;\n  color: #000;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    font-size: 14px;\n  }\n\n  & .icon {\n    width: 20px;\n    height: 20px;\n    stroke: ${colors.color1};\n    fill: transparent;\n  }\n`;\n\nexport const SelectItems = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 0;\n  width: 123px;\n  max-height: 144px;\n  border-radius: 6px;\n  background-color: #fff;\n  box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.03);\n  overflow-y: auto;\n  padding: 8px 14px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 12px;\n  line-height: 1.5;\n  color: rgba(${hexToRgb('#000000')}, 0.5);\n  z-index: 1;\n\n  .theme.dark & {\n    background-color: rgba(${hexToRgb(colors.color1)}, 1);\n    color: rgba(${hexToRgb(colors.color7)}, 0.6);\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    width: 140px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n\n  & div {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 6px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n\n  & .active {\n    color: ${colors.color1};\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  margin-top: 60px;\n  margin-bottom: 28px;\n  display: flex;\n  justify-content: space-between;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n`;\n\nexport const Ingredients = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  margin-top: 32px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    gap: 50px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const CounterStyled = styled.div`\n  border-radius: 18px;\n  border: 1px solid rgba(${hexToRgb('#333333')}, 0.3);\n  padding: 2px 10px;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  line-height: 1.3;\n\n  .theme.dark & {\n    border-color: rgba(${hexToRgb(colors.color7)}, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    &.minus {\n      stroke: rgba(${hexToRgb('#333333')}, 0.3);\n\n      .theme.dark & {\n        stroke: rgba(${hexToRgb(colors.color7)}, 0.8);\n      }\n    }\n    &.plus {\n      stroke: ${colors.color1};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, CounterStyled } from './Counter.styled';\nimport Sprite from 'images/sprite.svg';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\n\nconst Counter = ({ arrayHelpers }) => {\n  const dispatch = useDispatch();\n  const newRecipe = useSelector(selectNewRecipe);\n\n  const defaultIngredient = {\n    searchQuery: '',\n    ingredient: '',\n    ingredientId: null,\n    measure: '',\n    measureType: 'g',\n    modalOpened: false,\n  };\n\n  const handleCounter = action => {\n    const ingredients = newRecipe.ingredients.slice();\n    if (action === 'add') {\n      arrayHelpers.insert(ingredients.length, {\n        ingredient: '',\n        measure: '',\n      });\n      ingredients.push(defaultIngredient);\n    } else if (ingredients.length > 1) {\n      arrayHelpers.pop();\n      ingredients.pop();\n    }\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n  };\n\n  return (\n    <CounterStyled>\n      <Button type=\"button\" onClick={() => handleCounter('remove')}>\n        <svg className=\"minus\">\n          <use href={`${Sprite}#icon-minus`}></use>\n        </svg>\n      </Button>\n      {newRecipe.ingredients && newRecipe.ingredients.length}\n      <Button type=\"button\" onClick={() => handleCounter('add')}>\n        <svg className=\"plus\">\n          <use href={`${Sprite}#icon-plus`}></use>\n        </svg>\n      </Button>\n    </CounterStyled>\n  );\n};\n\nexport default Counter;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\n\nexport const SelectIngredientStyled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  position: relative;\n\n  & svg.delete {\n    width: 18px;\n    height: 18px;\n    stroke: #333;\n    fill: transparent;\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n\n  & input {\n    border: none;\n    outline: none;\n    background-color: rgba(${hexToRgb(colors.color17)}, 0.157);\n    border-radius: 6px;\n    padding: 16px 36px 16px 16px;\n    font-size: 16px;\n    line-height: 1.4;\n    letter-spacing: -0.02em;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n    width: 100%;\n\n    .theme.dark & {\n      background-color: transparent;\n      border: 1px solid rgba(${hexToRgb(colors.color7)}, 0.2);\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      padding: 16px 36px 16px 16px;\n    }\n  }\n\n  &.ingredient {\n    width: 100%;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n  }\n\n  &.measure {\n    width: 115px;\n    flex-shrink: 0;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 120px;\n    }\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n    }\n\n    & input {\n      padding-left: 5px;\n      padding-right: 65px;\n      text-align: right;\n    }\n  }\n\n  & .selected {\n    position: absolute;\n    top: 50%;\n    right: 36px;\n    transform: translateY(-50%);\n\n    .theme.dark & {\n      color: rgba(${hexToRgb(colors.color7)}, 1);\n    }\n  }\n\n  & svg.arrow-down {\n    position: absolute;\n    top: 50%;\n    right: 16px;\n    width: 18px;\n    height: 18px;\n    stroke: ${colors.color1};\n    fill: transparent;\n    transform: translateY(-50%);\n  }\n\n  & .select {\n    position: absolute;\n    top: 52px;\n    left: 0px;\n    width: 100%;\n    max-height: 154px;\n    border-radius: 6px;\n    background-color: #fff;\n    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.03);\n    overflow-y: auto;\n    padding: 8px 14px;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    font-size: 12px;\n    line-height: 1.5;\n    color: rgba(${hexToRgb('#000000')}, 0.5);\n    z-index: 1;\n    text-align: center;\n    overflow-y: auto;\n\n    .theme.dark & {\n      background-color: rgba(${hexToRgb(colors.color1)}, 1);\n      color: rgba(${hexToRgb(colors.color7)}, 0.7);\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      font-size: 14px;\n    }\n\n    & div {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n\n    & .active {\n      color: ${colors.color1};\n\n      .theme.dark & {\n        color: rgba(${hexToRgb(colors.color7)}, 1);\n      }\n    }\n  }\n\n  &.ingredient .select {\n    text-align: left;\n  }\n`;\n\nexport const Error = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0px;\n  transform: translateY(100%);\n  color: ${colors.color10};\n  font-size: 12px;\n  margin-top: 1px;\n  line-height: 1.4;\n`;\n","export const selectFoundIngredients = state =>\n  state.ingredients.foundIngredients;\n","import { Field } from 'formik';\nimport {\n  Error,\n  FieldWrapper,\n  SelectIngredientStyled,\n} from './SelectIngredient.styled';\nimport Sprite from 'images/sprite.svg';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\nimport { selectFoundIngredients } from 'redux/ingredients/selectors';\nimport { searchIngredients } from 'redux/ingredients/operations';\nimport { emptyFoundIngredients } from 'redux/ingredients/slice';\nimport { measureTypes } from 'constants';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { perfectScrollOptions } from 'constants';\nimport { useRef } from 'react';\n\nconst {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} = require('body-scroll-lock');\n\nconst SelectIngredient = ({ index, arrayHelpers, errors }) => {\n  const dispatch = useDispatch();\n  const newRecipe = useSelector(selectNewRecipe);\n  const ingredients = newRecipe.ingredients.slice();\n  const { searchQuery, ingredient, ingredientId, measure, measureType } =\n    ingredients[index];\n  const foundIngredients = useSelector(selectFoundIngredients);\n  const [measureTypesOpened, setMeasureTypesOpened] = useState(false);\n\n  const options = {\n    reserveScrollBarGap: true,\n  };\n\n  const handleMouseOver = () => {\n    const targetElement = document.body;\n    disableBodyScroll(targetElement, options);\n  };\n\n  const handleMouseOut = () => {\n    const targetElement = document.body;\n    enableBodyScroll(targetElement, options);\n  };\n\n  const removeIngredient = index => {\n    arrayHelpers.remove(index);\n    ingredients.splice(index, 1);\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n  };\n\n  const openMeasureTypes = () => {\n    setMeasureTypesOpened(!measureTypesOpened);\n  };\n\n  const setMeasureType = value => {\n    ingredients[index] = {\n      ...ingredients[index],\n      measureType: value,\n    };\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n    setMeasureTypesOpened(false);\n    clearAllBodyScrollLocks();\n  };\n\n  const findIngredients = () => {\n    if (searchQuery.length >= 2) {\n      dispatch(searchIngredients({ query: searchQuery }));\n    } else {\n      dispatch(emptyFoundIngredients());\n    }\n  };\n\n  const setIngredient = (index, item) => {\n    const { _id: ingredientId, name: ingredient } = item;\n\n    inputRef.current.value = item._id;\n\n    arrayHelpers.replace(index, {\n      ...arrayHelpers.form.values.ingredients[index],\n      ingredientId,\n    });\n\n    ingredients[index] = {\n      ...ingredients[index],\n      searchQuery: '',\n      ingredient,\n      ingredientId,\n    };\n    dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n    clearAllBodyScrollLocks();\n  };\n\n  const checkIngredient = e => {\n    if (!e.target.value) {\n      inputRef.current.value = '';\n      arrayHelpers.replace(index, {\n        ...arrayHelpers.form.values.ingredients[index],\n        ingredientId: '',\n      });\n    }\n  };\n\n  const inputRef = useRef(null);\n\n  return (\n    <SelectIngredientStyled>\n      <FieldWrapper className=\"ingredient\">\n        <Field\n          type=\"text\"\n          name={`ingredients.${index}.ingredient`}\n          placeholder=\" \"\n          value={ingredient}\n          onKeyUp={findIngredients}\n          onChange={checkIngredient}\n        />\n        <input\n          type=\"hidden\"\n          name={`ingredients.${index}.ingredientId`}\n          placeholder=\" \"\n          value={ingredientId}\n          ref={inputRef}\n        />\n        <svg className=\"arrow-down\">\n          <use href={`${Sprite}#icon-arrow-down`}></use>\n        </svg>\n        {!!foundIngredients.length && searchQuery && (\n          <div\n            className=\"select\"\n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n          >\n            <PerfectScrollbar options={perfectScrollOptions}>\n              {foundIngredients.map((item, key) => (\n                <div key={key} onClick={() => setIngredient(index, item)}>\n                  {item.name}\n                </div>\n              ))}\n            </PerfectScrollbar>\n          </div>\n        )}\n      </FieldWrapper>\n      <FieldWrapper className=\"measure\">\n        <Field\n          type=\"text\"\n          name={`ingredients.${index}.measure`}\n          placeholder=\" \"\n          value={measure}\n        />\n        <div className=\"selected\" onClick={openMeasureTypes}>\n          {measureType}\n        </div>\n        <svg className=\"arrow-down\" onClick={openMeasureTypes}>\n          <use href={`${Sprite}#icon-arrow-down`}></use>\n        </svg>\n        {measureTypesOpened && (\n          <div\n            className=\"select\"\n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n          >\n            <PerfectScrollbar options={perfectScrollOptions}>\n              {measureTypes.map((type, key) => (\n                <div\n                  key={key}\n                  className={measureType === type ? 'active' : ''}\n                  onClick={() => setMeasureType(type)}\n                >\n                  {type}\n                </div>\n              ))}\n            </PerfectScrollbar>\n          </div>\n        )}\n      </FieldWrapper>\n      <svg className=\"delete\" onClick={() => removeIngredient(index)}>\n        <use href={`${Sprite}#icon-delete`}></use>\n      </svg>\n      {errors.ingredients && (\n        <Error>\n          {errors.ingredients[index].ingredientId\n            ? `${errors.ingredients[index].ingredientId}. `\n            : ``}\n          {errors.ingredients[index].measure\n            ? `${errors.ingredients[index].measure}. `\n            : ``}\n        </Error>\n      )}\n    </SelectIngredientStyled>\n  );\n};\n\nexport default SelectIngredient;\n","import { Button } from 'components/Styled';\nimport { ErrorMessage, Field, FieldArray, Form, Formik } from 'formik';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport {\n  AddImage,\n  AddRecipeFormStyled,\n  BlockLeft,\n  BlockRight,\n  ButtonContainer,\n  FieldWrapper,\n  Ingredients,\n  SelectItems,\n  Selected,\n  Title,\n  TopBlocks,\n} from './AddRecipeForm.styled';\nimport Sprite from 'images/sprite.svg';\nimport { selectCategories } from 'redux/recipes/selectors';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport Counter from 'components/Counter/Counter';\nimport SelectIngredient from './SelectIngredient';\nimport { selectNewRecipe } from 'redux/general/selectors';\nimport { setNewRecipe } from 'redux/general/slice';\nimport { createOwnRecipe } from 'redux/ownRecipes/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { perfectScrollOptions } from 'constants';\nimport { LoaderSmall } from 'components/Loader/Loader';\nimport { recipeInitialValues } from 'constants';\n\nconst {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} = require('body-scroll-lock');\n\nconst AddRecipeForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const categories = useSelector(selectCategories);\n  const newRecipe = useSelector(selectNewRecipe);\n  const { image, title, description, category, time, instructions } = newRecipe;\n  const ingredients = newRecipe.ingredients.slice();\n  const [file, setFile] = useState(null);\n  const createRecipeLoading = useSelector(\n    state => state.ownRecipes.createRecipeLoading\n  );\n\n  const options = {\n    reserveScrollBarGap: true,\n  };\n\n  const handleMouseOver = () => {\n    const targetElement = document.body;\n    disableBodyScroll(targetElement, options);\n  };\n\n  const handleMouseOut = () => {\n    const targetElement = document.body;\n    enableBodyScroll(targetElement, options);\n  };\n\n  const initialValues = useMemo(() => {\n    return {\n      image: '',\n      title,\n      description,\n      category,\n      time,\n      instructions,\n      ingredients: ingredients.map(({ ingredientId, measure }) => {\n        return { ingredientId, measure };\n      }),\n    };\n  }, [category, description, ingredients, instructions, time, title]);\n\n  useEffect(() => {\n    if (categories[0]?.name !== undefined && !newRecipe.category) {\n      dispatch(setNewRecipe({ ...newRecipe, category: categories[0].name }));\n    }\n  }, [categories, dispatch, newRecipe]);\n\n  const [selectCategoryOpened, setSelectCategoryOpened] = useState(false);\n  const [selectTimeOpened, setSelectTimeOpened] = useState(false);\n\n  const schema = yup.object().shape({\n    title: yup.string().required('Title is a required field'),\n    description: yup.string().required('Description is a required field'),\n    // category: yup.string().required('Category is a required field'),\n    time: yup.string().required('Time is a required field'),\n    instructions: yup.string().required('Description is a required field'),\n    image: yup\n      .mixed()\n      .required('Please select an image')\n      .test('fileType', 'Invalid file format', value => {\n        if (value === undefined) return false;\n        const allowedFormats = ['image/jpeg', 'image/png'];\n        return allowedFormats.includes(value.type);\n      }),\n    ingredients: yup.array().of(\n      yup.object().shape({\n        ingredientId: yup.string().required('Ingredient is required'),\n        measure: yup.string().required('Measure is required'),\n      })\n    ),\n  });\n\n  const handleOnChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'image':\n        const image = e.target.files[0];\n        const imageURL = URL.createObjectURL(image);\n        dispatch(setNewRecipe({ ...newRecipe, image: imageURL }));\n        setFile(image);\n        break;\n      case 'title':\n        dispatch(setNewRecipe({ ...newRecipe, title: value }));\n        break;\n      case 'description':\n        dispatch(setNewRecipe({ ...newRecipe, description: value }));\n        break;\n      case 'instructions':\n        dispatch(setNewRecipe({ ...newRecipe, instructions: value }));\n        break;\n      default:\n        if (name.startsWith('ingredients')) {\n          const index = name.split('.')[1];\n          const element = name.split('.')[2];\n          if (element === 'ingredient') {\n            ingredients[index] = {\n              ...ingredients[index],\n              ingredient: value,\n              searchQuery: value,\n            };\n          }\n          if (element === 'measure') {\n            ingredients[index] = {\n              ...ingredients[index],\n              measure: value,\n            };\n          }\n          dispatch(setNewRecipe({ ...newRecipe, ingredients }));\n        }\n        break;\n    }\n  };\n\n  const openSelectCategory = () => {\n    setSelectCategoryOpened(!selectCategoryOpened);\n  };\n\n  const selectCategory = category => {\n    dispatch(setNewRecipe({ ...newRecipe, category }));\n    clearAllBodyScrollLocks();\n  };\n\n  const openSelectTime = () => {\n    setSelectTimeOpened(!selectTimeOpened);\n  };\n\n  const selectTime = time => {\n    dispatch(setNewRecipe({ ...newRecipe, time }));\n    clearAllBodyScrollLocks();\n  };\n\n  const fileInputRef = useRef(null);\n\n  const handleFileClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const formData = new FormData();\n\n    const newIngredients = ingredients.map(\n      ({ ingredientId, measure, measureType }) => ({\n        id: ingredientId,\n        measure: `${measure} ${measureType}`,\n      })\n    );\n\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('category', category);\n    formData.append('time', time);\n    formData.append('ingredients', JSON.stringify(newIngredients));\n    formData.append('instructions', instructions);\n\n    await dispatch(createOwnRecipe(formData));\n    await dispatch(setNewRecipe(recipeInitialValues));\n    resetForm();\n    navigate('/my');\n  };\n\n  return (\n    <AddRecipeFormStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({\n          setFieldValue,\n          errors,\n          touched,\n          isSubmitting,\n          submitCount,\n          values,\n        }) => {\n          return (\n            <Form autoComplete=\"off\" onChange={handleOnChange}>\n              <TopBlocks>\n                <BlockLeft>\n                  <AddImage\n                    onClick={handleFileClick}\n                    image={file && image ? image : ''}\n                  >\n                    {(!image || !file) && (\n                      <svg className=\"icon\">\n                        <use href={`${Sprite}#icon-photo`}></use>\n                      </svg>\n                    )}\n                  </AddImage>\n                  <FieldWrapper className=\"image\">\n                    <input\n                      name=\"image\"\n                      type=\"file\"\n                      accept=\".jpg,.jpeg,.png\"\n                      ref={fileInputRef}\n                      style={{ display: 'none' }}\n                      onChange={e => {\n                        setFieldValue('image', e.target.files[0]);\n                      }}\n                    />\n                    <ErrorMessage\n                      className=\"error\"\n                      component=\"div\"\n                      name=\"image\"\n                    />\n                  </FieldWrapper>\n                </BlockLeft>\n\n                <BlockRight>\n                  <FieldWrapper>\n                    <Field\n                      type=\"text\"\n                      name=\"title\"\n                      placeholder=\" \"\n                      value={title}\n                    />\n                    <label className=\"label\" htmlFor=\"title\">\n                      Enter item title\n                    </label>\n                    <ErrorMessage\n                      className=\"error\"\n                      component=\"div\"\n                      name=\"title\"\n                    />\n                  </FieldWrapper>\n\n                  <FieldWrapper>\n                    <Field\n                      type=\"text\"\n                      name=\"description\"\n                      placeholder=\" \"\n                      value={description}\n                    />\n                    <label className=\"label\" htmlFor=\"description\">\n                      Enter about recipe *\n                    </label>\n                    <ErrorMessage\n                      className=\"error\"\n                      component=\"div\"\n                      name=\"description\"\n                    />\n                  </FieldWrapper>\n\n                  <FieldWrapper className=\"select\">\n                    <Field\n                      type=\"text\"\n                      name=\"category\"\n                      placeholder=\" \"\n                      value={category}\n                    />\n                    <label className=\"label\" htmlFor=\"category\">\n                      Category *\n                    </label>\n                    <Selected onClick={openSelectCategory}>\n                      {category}\n                      <svg className=\"icon\">\n                        <use href={`${Sprite}#icon-arrow-down`}></use>\n                      </svg>\n                      {selectCategoryOpened && (\n                        <SelectItems\n                          onMouseOver={handleMouseOver}\n                          onMouseOut={handleMouseOut}\n                        >\n                          <PerfectScrollbar options={perfectScrollOptions}>\n                            {categories.map(item => (\n                              <div\n                                key={item._id}\n                                onClick={() => selectCategory(item.name)}\n                                className={\n                                  item.name === category ? 'active' : ''\n                                }\n                              >\n                                {item.name}\n                              </div>\n                            ))}\n                          </PerfectScrollbar>\n                        </SelectItems>\n                      )}\n                    </Selected>\n                    <ErrorMessage\n                      className=\"error\"\n                      component=\"div\"\n                      name=\"category\"\n                    />\n                  </FieldWrapper>\n\n                  <FieldWrapper className=\"select\">\n                    <Field\n                      type=\"text\"\n                      name=\"time\"\n                      placeholder=\" \"\n                      value={time}\n                    />\n                    <label className=\"label\" htmlFor=\"time\">\n                      Cooking time *\n                    </label>\n                    <Selected onClick={openSelectTime}>\n                      {time}\n                      <svg className=\"icon\">\n                        <use href={`${Sprite}#icon-arrow-down`}></use>\n                      </svg>\n                      {selectTimeOpened && (\n                        <SelectItems\n                          onMouseOver={handleMouseOver}\n                          onMouseOut={handleMouseOut}\n                        >\n                          <PerfectScrollbar options={perfectScrollOptions}>\n                            {Array.from({ length: 24 }, (_, index) => (\n                              <div\n                                key={index}\n                                onClick={() =>\n                                  selectTime(`${(index + 1) * 5} min`)\n                                }\n                                className={\n                                  `${(index + 1) * 5} min` === time\n                                    ? 'active'\n                                    : ''\n                                }\n                              >\n                                {(index + 1) * 5} min\n                              </div>\n                            ))}\n                          </PerfectScrollbar>\n                        </SelectItems>\n                      )}\n                    </Selected>\n                    <ErrorMessage\n                      className=\"error\"\n                      component=\"div\"\n                      name=\"time\"\n                    />\n                  </FieldWrapper>\n                </BlockRight>\n              </TopBlocks>\n\n              <FieldArray\n                name=\"ingredients\"\n                render={arrayHelpers => (\n                  <>\n                    <Title>\n                      Ingredients\n                      <Counter arrayHelpers={arrayHelpers} values={values} />\n                    </Title>\n                    <Ingredients>\n                      {newRecipe.ingredients &&\n                        newRecipe.ingredients.map((item, index) => (\n                          <SelectIngredient\n                            key={index}\n                            index={index}\n                            arrayHelpers={arrayHelpers}\n                            errors={errors}\n                          />\n                        ))}\n                    </Ingredients>\n                  </>\n                )}\n              />\n\n              <Title>Recipe Preparation</Title>\n              <FieldWrapper className=\"instructions\">\n                <Field\n                  name=\"instructions\"\n                  placeholder=\"Enter recipe\"\n                  as=\"textarea\"\n                  value={instructions}\n                />\n                <ErrorMessage\n                  className=\"error\"\n                  component=\"div\"\n                  name=\"instructions\"\n                />\n              </FieldWrapper>\n\n              <ButtonContainer>\n                <Button className=\"type5\" type=\"submit\">\n                  Add\n                </Button>\n                {createRecipeLoading && <LoaderSmall name=\"new-recipe\" />}\n              </ButtonContainer>\n\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n            </Form>\n          );\n        }}\n      </Formik>\n    </AddRecipeFormStyled>\n  );\n};\n\nexport default AddRecipeForm;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const PopularRecipesStyled = styled.div`\n  margin-bottom: 40px;\n  min-height: 200px;\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0px 32px;\n  }\n\n  &.no-items {\n    min-height: 0px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\nimport { colors } from 'constants';\nimport { hexToRgb } from 'helpers';\nimport { NavLink } from 'react-router-dom';\n\nexport const RecipePreviewStyled = styled(NavLink)`\n  display: flex;\n  gap: 12px;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n\n  .theme.dark & {\n    border-color: rgba(${hexToRgb(colors.color7)}, 0.15);\n  }\n\n  &:last-child {\n    padding-bottom: 0px;\n    margin-bottom: 0px;\n    border-bottom: none;\n  }\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-basis: calc((100% - 1 * 32px) / 2);\n\n    &:last-child {\n      padding-bottom: 20px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    }\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    flex-basis: 100%;\n\n    &:last-child {\n      padding-bottom: 0px;\n      margin-bottom: 0px;\n      border-bottom: none;\n    }\n  }\n`;\n\nexport const Image = styled.div`\n  display: block;\n  width: 104px;\n  height: 104px;\n  border-radius: 8px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow: hidden;\n  background: url(${({ url }) => url}) no-repeat center;\n  background-size: cover;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 97px;\n    height: 97px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: -0.24px;\n  margin-bottom: 5px;\n  color: ${colors.color15};\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 1);\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n\nexport const Description = styled.div`\n  font-size: 12px;\n  line-height: 1.4;\n  letter-spacing: -0.02em;\n  color: #3e4462;\n\n  .theme.dark & {\n    color: rgba(${hexToRgb(colors.color7)}, 0.6);\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n  }\n`;\n","import {\n  Description,\n  Image,\n  RecipePreviewStyled,\n  Title,\n  Wrapper,\n} from './RecipePreview.styled';\n\nconst RecipePreview = ({ recipe, type }) => {\n  const { _id, preview, description, title } = recipe;\n\n  return (\n    <RecipePreviewStyled to={`/recipe/${_id}`}>\n      <Image className=\"recipe-image\" url={preview}></Image>\n      <Wrapper>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </Wrapper>\n    </RecipePreviewStyled>\n  );\n};\n\nexport default RecipePreview;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPopularRecipes } from 'redux/recipes/selectors';\nimport { getPopularRecipes } from 'redux/recipes/operations';\nimport { PopularRecipesStyled } from './PopularRecipes.styled';\nimport Pagination from 'components/Pagination/Pagination';\nimport { useState } from 'react';\nimport { scrollToTop } from 'helpers';\nimport { useRef } from 'react';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport RecipePreview from 'components/Recipes/RecipePreview';\nimport { LoaderSmall } from 'components/Loader/Loader';\n\nconst PopularRecipes = () => {\n  const dispatch = useDispatch();\n  const deviceType = useSelector(selectDeviceType);\n  const { recipes, total } = useSelector(selectPopularRecipes);\n  const [top, setTop] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(4);\n  const ref = useRef(null);\n  const loading = useSelector(state => state.recipes.popularRecipesLoading);\n\n  const paginationShop = false;\n\n  useEffect(() => {\n    dispatch(getPopularRecipes({ page: 1, limit: 4 }));\n  }, [dispatch]);\n\n  const handlePage = page => {\n    setPage(page);\n    dispatch(getPopularRecipes({ page, limit }));\n    scrollToTop(top - (deviceType !== 'mobile' ? 100 : 100));\n  };\n\n  useEffect(() => {\n    const element = ref.current;\n    if (element) {\n      const { top } = element.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [ref]);\n\n  return (\n    <>\n      <PopularRecipesStyled\n        ref={ref}\n        className={`${deviceType === 'desktop' ? 'desktop' : ''} ${\n          !recipes.length ? 'no-items' : ''\n        }`}\n      >\n        {loading ? (\n          <LoaderSmall scale=\"0.8\" top=\"100px\" />\n        ) : (\n          !!recipes.length &&\n          recipes &&\n          recipes.map((recipe, key) => (\n            <RecipePreview key={key} recipe={recipe} />\n          ))\n        )}\n      </PopularRecipesStyled>\n      {paginationShop &&\n        !loading &&\n        !!recipes.length &&\n        deviceType !== 'desktop' && (\n          <Pagination\n            total={Math.ceil(total / limit)}\n            page={page}\n            handlePage={handlePage}\n          />\n        )}\n    </>\n  );\n};\n\nexport default PopularRecipes;\n","import {\n  AddRecipeStyled,\n  PopularRecipesWrapper,\n  SocialIcons,\n} from './AddRecipe.styled';\nimport AddRecipeForm from 'components/AddRecipeForm/AddRecipeForm';\nimport { Title } from 'components/AddRecipeForm/AddRecipeForm.styled';\nimport PopularRecipes from 'components/PopularRecipes/PopularRecipes';\nimport { useSelector } from 'react-redux';\nimport { selectDeviceType } from 'redux/general/selectors';\nimport { BsFacebook, BsInstagram, BsYoutube, BsTwitter } from 'react-icons/bs';\nimport { NavLink } from 'react-router-dom';\n\nconst AddRecipe = () => {\n  const deviceType = useSelector(selectDeviceType);\n\n  return (\n    <AddRecipeStyled>\n      <AddRecipeForm />\n      <PopularRecipesWrapper>\n        {deviceType === 'desktop' && (\n          <>\n            <Title className=\"follow-us\">Follow us</Title>\n            <SocialIcons>\n              <li>\n                <NavLink to=\"/\">\n                  <BsFacebook className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsInstagram className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsYoutube className=\"icon\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/\">\n                  <BsTwitter className=\"icon\" />\n                </NavLink>\n              </li>\n            </SocialIcons>\n          </>\n        )}\n        <Title>Popular recipes</Title>\n        <PopularRecipes />\n      </PopularRecipesWrapper>\n    </AddRecipeStyled>\n  );\n};\n\nexport default AddRecipe;\n","import AddRecipe from 'components/AddRecipe/AddRecipe';\nimport Deco from 'components/Deco/Deco';\nimport { PageContainer } from 'components/Styled/PageContainer.styled';\nimport { PageTitle } from 'components/Styled/PageTitle.styled';\n\nconst AddRecipePage = () => {\n  return (\n    <PageContainer>\n      <Deco />\n      <PageTitle>Add recipe</PageTitle>\n      <AddRecipe />\n    </PageContainer>\n  );\n};\n\nexport default AddRecipePage;\n","export const selectCategories = state => state.recipes.categories;\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectRecipesByCategory = state => state.recipes.recipesByCategory;\nexport const selectRecipe = state => state.recipes.recipe;\nexport const selectFavoriteRecipes = state => state.recipes.favoriteRecipes;\nexport const selectPopularRecipes = state => state.recipes.popularRecipes;\nexport const selectSearchRecipes = state => state.recipes.searchRecipes;\n"],"names":["DecoStyled","styled","colors","mediaSizes","className","PaginationWrapper","PaginationStyled","Pagination","hexToRgb","total","page","handlePage","deviceType","useSelector","selectDeviceType","count","siblingCount","size","onChange","_","newPage","PageContainer","type","container","PageTitle","PageSubTitle","AddRecipeStyled","PopularRecipesWrapper","SocialIcons","AddRecipeFormStyled","TopBlocks","BlockLeft","BlockRight","AddImage","image","FieldWrapper","transition","Selected","SelectItems","Title","Ingredients","ButtonContainer","CounterStyled","Button","arrayHelpers","dispatch","useDispatch","newRecipe","selectNewRecipe","defaultIngredient","searchQuery","ingredient","ingredientId","measure","measureType","modalOpened","handleCounter","action","ingredients","slice","insert","length","push","pop","setNewRecipe","onClick","href","Sprite","SelectIngredientStyled","Error","selectFoundIngredients","state","foundIngredients","require","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","index","errors","useState","measureTypesOpened","setMeasureTypesOpened","options","reserveScrollBarGap","handleMouseOver","targetElement","document","body","handleMouseOut","openMeasureTypes","inputRef","useRef","name","placeholder","value","onKeyUp","searchIngredients","query","emptyFoundIngredients","e","target","current","replace","form","values","ref","onMouseOver","onMouseOut","perfectScrollOptions","map","item","key","_id","setIngredient","measureTypes","remove","splice","removeIngredient","navigate","useNavigate","categories","selectCategories","title","description","category","time","instructions","file","setFile","createRecipeLoading","ownRecipes","initialValues","useMemo","useEffect","undefined","selectCategoryOpened","setSelectCategoryOpened","selectTimeOpened","setSelectTimeOpened","schema","yup","shape","required","test","includes","of","handleOnChange","files","imageURL","URL","createObjectURL","startsWith","split","element","openSelectCategory","openSelectTime","fileInputRef","handleFileClick","click","handleSubmit","resetForm","formData","FormData","newIngredients","id","append","JSON","stringify","createOwnRecipe","recipeInitialValues","validationSchema","onSubmit","setFieldValue","touched","isSubmitting","submitCount","autoComplete","accept","style","display","component","htmlFor","selectCategory","Array","from","selectTime","render","as","Loader","PopularRecipesStyled","RecipePreviewStyled","NavLink","Image","url","Wrapper","Description","recipe","preview","to","selectPopularRecipes","recipes","setTop","loading","popularRecipesLoading","getPopularRecipes","limit","top","getBoundingClientRect","scale","Deco","selectRecipesMainPage","recipesMainPage","selectRecipesByCategory","recipesByCategory","selectRecipe","selectFavoriteRecipes","favoriteRecipes","popularRecipes","selectSearchRecipes","searchRecipes"],"sourceRoot":""}